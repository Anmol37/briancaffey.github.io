<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brian Caffey</title>
    <description>Thanks for visiting my site, please take a minute to look around!
</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 06 Apr 2016 00:18:54 -0400</pubDate>
    <lastBuildDate>Wed, 06 Apr 2016 00:18:54 -0400</lastBuildDate>
    <generator>Jekyll v3.1.2</generator>
    
      <item>
        <title>Simple twitter-bot with Python, Tweepy and Heroku</title>
        <description>&lt;p&gt;This post provides a walk-through tutorial on setup a simple twitter-bot that can do just about anything. I recently set up a simple &lt;a href=&quot;https://twitter.com/tw_tt_r_b_t&quot;&gt;twitter-bot&lt;/a&gt; that generates random cellular automata at a regular intervals, and I plan on doing a lot more with the Twitter API and text data analysis.&lt;/p&gt;

&lt;h2 id=&quot;tweepyhttpwwwtweepyorg&quot;&gt;&lt;a href=&quot;http://www.tweepy.org/&quot;&gt;Tweepy&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Tweepy is an easy-to-use Python library for accessing the Twitter API. There are several popular Python packages like Tweepy that serve as Twitter API wrappers, but I was only able to get my Twitterbot up and running with Tweepy.&lt;/p&gt;

&lt;p&gt;Get started by installing Tweepy by running &lt;code class=&quot;highlighter-rouge&quot;&gt;pip install tweepy&lt;/code&gt; in your command line. Next, let’s jump right into to a super-simple example of how to tweet with Tweepy.&lt;/p&gt;

&lt;p&gt;While you test out your twitter-bot, you might want to use a throw-away Twitter account. To do this, you can make a new account associated with a new email address, or you can create an account that is linked to the same email address as your main Twitter account. When you enter your email information at the Sign Up page, add &lt;code class=&quot;highlighter-rouge&quot;&gt;+alias&lt;/code&gt; to the first part of your email address, right before the &lt;code class=&quot;highlighter-rouge&quot;&gt;@&lt;/code&gt;. Here’s an example:&lt;/p&gt;

&lt;p&gt;If your email is &lt;code class=&quot;highlighter-rouge&quot;&gt;john_doe@gmail.com&lt;/code&gt;, you could enter &lt;code class=&quot;highlighter-rouge&quot;&gt;john_doe+twitter@gmail.com&lt;/code&gt;, and the sign up confirmation for this unique account will go to &lt;code class=&quot;highlighter-rouge&quot;&gt;john_doe@gmail.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Twitter requires that accounts accessing its API have a phone number associated with the account, so don’t skip this step in the sign up process.&lt;/p&gt;

&lt;p&gt;While signed in to your new account, go to &lt;a href=&quot;https://apps.twitter.com/&quot;&gt;https://apps.twitter.com/&lt;/a&gt; and enter information for your new twitter-bot app.&lt;/p&gt;

&lt;p&gt;On the following page, go over to the “Keys and Access Tokens” tab and copy the &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Key (API Key)&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Consumer Secret (API Secret)&lt;/code&gt;. Also, click the “Create my access token” button at the bottom of the page and copy the resulting &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Token&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Access Token Secret&lt;/code&gt;. We will use these codes to make API requests on your own account’s behalf. Do not share your access token secret with anyone.&lt;/p&gt;

&lt;p&gt;Open up your favorite text editor and create a new Python script called something like &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetbot.py&lt;/code&gt;. Copy in the following code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tweepy&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;CONSUMER_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;replace with your key&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CONSUMER_SECRET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;replace with your secret&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ACCESS_KEY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;replace with your access key&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ACCESS_SECRET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&#39;replace with your access secret&#39;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweepy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OAuthHandler&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;CONSUMER_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONSUMER_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set_access_token&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ACCESS_KEY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ACCESS_SECRET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tweepy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;API&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;auth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Sending my first tweet via Tweepy!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Navigate to the location of this script in your command line and run it with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ python tweetbot.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Now go over to your new Twitter account and check to see if your first tweet was sent successfully.&lt;/p&gt;

&lt;p&gt;At this point there are already lots of interesting things you can do by simply passing strings into &lt;code class=&quot;highlighter-rouge&quot;&gt;api.update_status()&lt;/code&gt;. BeautifulSoup is a great tool for scraping information from the web that you can feed your twitter-bot.&lt;/p&gt;

&lt;p&gt;With the simple script we can schedule regular tweets by adding a simple &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; loop with a timer:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scrape_some_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;api&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_status&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tweet&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In this example, the &lt;code class=&quot;highlighter-rouge&quot;&gt;scrape_some_data()&lt;/code&gt; function would scrape some information and save it to the variable &lt;code class=&quot;highlighter-rouge&quot;&gt;tweet&lt;/code&gt;. Next, &lt;code class=&quot;highlighter-rouge&quot;&gt;time.sleep(300)&lt;/code&gt; waits 5 minutes before the loop starts again. This makes sure that your twitter-bot doesn’t exceed the &lt;a href=&quot;https://dev.twitter.com/rest/public/rate-limiting&quot;&gt;Twitter API rate limit&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;herokuhttpswwwherokucom&quot;&gt;&lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;At this point we have a functioning twitter-bot, but we have to keep a machine running our script around the clock for twitter-bot to operate continuously. One solution would to run this script on a Raspberry Pi. Another great solution that I will explore here is to deploy the twitter-bot on Heroku.&lt;/p&gt;

&lt;p&gt;Heroku is a cloud platform based on a managed container system. Instead of on a Raspberry Pi, we will put your &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetbot.py&lt;/code&gt; script (along with a few other simple files) on a dyno.  Dynos are isolated, virtualized Unix containers, that provide the environment required to run your application.&lt;/p&gt;

&lt;p&gt;If this doesn’t make much sense, think of Heroku as dedicated virtual Linux machine in the cloud that you can use (for free) to run your twitter-bot. The following steps will show you how to get setup with Heroku on your computer.&lt;/p&gt;

&lt;p&gt;Select “Python” from &lt;a href=&quot;https://devcenter.heroku.com/start&quot;&gt;https://devcenter.heroku.com/start&lt;/a&gt;. This tutorial shows you how to launch a basic Django app, but we will tweak it slightly in order to get our twitter-bot running.&lt;/p&gt;

&lt;p&gt;First, download the Heroku Toolbelt (command line tools) and run &lt;code class=&quot;highlighter-rouge&quot;&gt;$ heroku login&lt;/code&gt;, then enter your Heroku account information. Download the sample web application and check out what files come with it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ git clone https://github.com/heroku/python-getting-started.git
$ cd python-getting-started
$ ls
Procfile		app.json		manage.py
Procfile.windows	gettingstarted		requirements.txt
README.md		hello			runtime.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt; file will give instructions to your dyno regarding what it should do. Take a look inside this file, and you will see &lt;code class=&quot;highlighter-rouge&quot;&gt;web: gunicorn gettingstarted.wsgi --log-file -&lt;/code&gt;. This indicates that the dyno will be making a website using the file &lt;code class=&quot;highlighter-rouge&quot;&gt;gettingstarted.wsgi&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Delete the contents of this file and copy in the following line: 
&lt;code class=&quot;highlighter-rouge&quot;&gt;worker: tweetbot.py&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;This will tell our dyno that we want it to do a simple task: run &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetbot.py&lt;/code&gt;. Next, check out &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt;. The contents of this file indicate the packages our Python script needs to run. For our twitter-bot, we only need the Tweepy package. To check which version of Tweepy you have on your computer, run &lt;code class=&quot;highlighter-rouge&quot;&gt;pip freeze | grep tweepy&lt;/code&gt; in the terminal. Mine reads &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy==3.5.0&lt;/code&gt;. Copy &lt;code class=&quot;highlighter-rouge&quot;&gt;tweepy==3.5.0&lt;/code&gt; into &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; and delete the other lines.&lt;/p&gt;

&lt;p&gt;Next, we will create a place on Heroku where your twitter-bot will live. Run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ heroku create
Creating app... done, stack is cedar-14
https://random-word-28487.herokuapp.com/ | https://git.heroku.com/random-word-28487.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Like Github, Heroku uses &lt;code class=&quot;highlighter-rouge&quot;&gt;git&lt;/code&gt; to move files from your local machine to Heroku’s containers. Clear out the &lt;code class=&quot;highlighter-rouge&quot;&gt;python-getting-started&lt;/code&gt; file so that the only files inside are &lt;code class=&quot;highlighter-rouge&quot;&gt;tweetbot.py&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;requirements.txt&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Procfile&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ git add .
$ git commit -m &quot;initial commit&quot;
$ git push heroku master
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Pushing the files to Heroku with &lt;code class=&quot;highlighter-rouge&quot;&gt;$ git push heroku master&lt;/code&gt; should create your twitter-bot program on Heroku and launch it into the Twitter-verse! To make sure everything is running smoothly, you can check out the log files on your Heroku Dashboard. There is lots you can do with Twitter and Tweepy, hopefully this tutorial has helped you understand the basics of how the Twitter API works and how to write a twitter-bot. Thanks for reading, and feel free to leave a comment!&lt;/p&gt;
</description>
        <pubDate>Tue, 05 Apr 2016 00:00:00 -0400</pubDate>
        <link>/2016/04/05/twitter-bot-tutorial.html</link>
        <guid isPermaLink="true">/2016/04/05/twitter-bot-tutorial.html</guid>
        
        
      </item>
    
      <item>
        <title>Simple Jekyll tutorial with Github Pages</title>
        <description>&lt;p&gt;I’m absolutely loving my new Jekyll blog, but getting it setup wasn’t that easy. Finding useful and accessible information on how everything works was very difficult. In the end, faithfully following tutorials and crashing around on Github resulted in this functional blog.&lt;/p&gt;

&lt;p&gt;This post will provide a Jekyll blog setup tutorial assuming very little knowledge of the languages and technologies it is built on (Github, git, HTML, Markdown, Jekyll, Ruby). Casually surveying friends and colleagues, it seems that many people have heard of Github Pages, but haven’t explored it for a number of reasons. Here is what I hope to accomplish:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Help you get setup with everything you will need before you start building a Jekyll blog&lt;/li&gt;
  &lt;li&gt;Build a clean, professional site that let’s you show off your resume, link to your social media accounts and build blog posts to catalog your ideas and share your opinions&lt;/li&gt;
  &lt;li&gt;Provide links to more in depth resources on the basics as well as links to more advanced topics&lt;/li&gt;
  &lt;li&gt;(I’ve written this tutorial assuming you are using an Apple computer)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first few steps are the easiest. So let’s jump right in!&lt;/p&gt;

&lt;h2 id=&quot;step-1-github-pageshttpspagesgithubcom&quot;&gt;Step 1: &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Check out the instructions that Github offers on their &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; site. If you don’t already have a Github account, &lt;a href=&quot;https://github.com/join&quot;&gt;get one first&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The username you choose on Github will be the first part of the URL that your site uses, but you can &lt;a href=&quot;https://help.github.com/articles/about-supported-custom-domains/&quot;&gt;change this later&lt;/a&gt;. For example, if your name is Art Vandelay and you select &lt;em&gt;artvandelay&lt;/em&gt; as your Github username, your site’s URL will be &lt;em&gt;artvandelay.github.io&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As the Github pages guide instructs you to do, create a repository titled &lt;em&gt;username&lt;/em&gt;.github.io (where &lt;em&gt;username&lt;/em&gt; is your Github account name). You don’t need to initialize the repository with the ReadMe.md file. This step is very important and any variation in the name of this repository will not result in a successful Github Pages site.&lt;/p&gt;

&lt;p&gt;Select “A terminal” when you see the question &lt;em&gt;“What git client are you using?”&lt;/em&gt; (it should already be selected). You may be asking yourself, “what is git?” For now, just think of it as a version control manager.&lt;/p&gt;

&lt;p&gt;This next step is where I ran into a few difficulties, so I’m going to clarify a few things. Eventually, your newly created repository &lt;em&gt;username&lt;/em&gt;.github.io will house all of the files that will run your blog, including the HTML, CSS files, etc. What you need to do next is create a folder on your computer where you will keep a copy of all of your site’s files. You will use git to push files from this local folder on your computer to your repository that is ‘hosting’ your Jekyll site. We will talk about what “using git” means in just a bit.&lt;/p&gt;

&lt;p&gt;I keep mine in a folder at the location &lt;code class=&quot;highlighter-rouge&quot;&gt;~/Github/briancaffey.github.io&lt;/code&gt; (where &lt;code class=&quot;highlighter-rouge&quot;&gt;~&lt;/code&gt; references my ‘Home’ folder). If you are not familiar with Github, read the next few paragraphs carefully before doing anything. The command listed in step 2 of the &lt;a href=&quot;https://pages.github.com/&quot;&gt;Github Pages&lt;/a&gt; instructions tells you to run the following command in your terminal:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ git clone https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will create a file named username.github.io &lt;em&gt;inside&lt;/em&gt; whatever folder you are currently in. Open up terminal and type in the following command, then press enter. (Don’t type the &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt;, just type &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt;; the &lt;code class=&quot;highlighter-rouge&quot;&gt;$&lt;/code&gt; signifies that you are in the terminal).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ pwd
User/yourmaclogin/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You should see a file path, something like &lt;code class=&quot;highlighter-rouge&quot;&gt;Users/yourmaclogin&lt;/code&gt; on the following line. &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; means “Print Working Directory”, and that’s just what you did. Your “working directory” is the directory you are “at” (sorry about the poor English, but this is the easiest way to communicate this idea).&lt;/p&gt;

&lt;p&gt;So, you should choose the folder that you want to “clone” (copy) your empty &lt;em&gt;username&lt;/em&gt;.github.io repository into. We will learn two more commands that will help us “navigate” our file system.&lt;/p&gt;

&lt;p&gt;Suppose you have a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; with the following files inside that folder: &lt;code class=&quot;highlighter-rouge&quot;&gt;sub1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;sub2&lt;/code&gt;. Inside &lt;code class=&quot;highlighter-rouge&quot;&gt;sub1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;sub2&lt;/code&gt;, suppose you have some text files: &lt;code class=&quot;highlighter-rouge&quot;&gt;sub1_example.txt&lt;/code&gt; inside the folder &lt;code class=&quot;highlighter-rouge&quot;&gt;sub1&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;sub2_example.txt&lt;/code&gt; inside &lt;code class=&quot;highlighter-rouge&quot;&gt;sub2&lt;/code&gt;. If your current working directory is &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;, then we can list all of the file and folder that are directly inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt; with the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ ls
sub1 sub2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; is short for “list” and it simply lists files and folders that are directly inside a file. It won’t list either of the text files, because those are not directly inside of &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;, even though they technically are located “within” it.&lt;/p&gt;

&lt;p&gt;In order to see these text files, you will need to change our working directory. You can do this with the “change directory” command that is conveniently called &lt;code class=&quot;highlighter-rouge&quot;&gt;cd&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ cd sub1
$ ls 
sub1_example.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Great! Now what about sub2? The &lt;code class=&quot;highlighter-rouge&quot;&gt;cd &amp;lt;folder&amp;gt;&lt;/code&gt; command takes us inside a folder that is in our working directory. It can also take us to the folder that &lt;em&gt;contains&lt;/em&gt; out working directory. Check out this example:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ cd ..
$ pwd 
/main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cd ..&lt;/code&gt; takes us from &lt;code class=&quot;highlighter-rouge&quot;&gt;sub1&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;main&lt;/code&gt;. If you are not sure where you are, just run the &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; command and you can see the contents of your working directory.&lt;/p&gt;

&lt;p&gt;Ok, once you have a handle on this, run the following command in the terminal. Be sure to replace &lt;em&gt;username&lt;/em&gt; with your actual Github username in both places, otherwise you will see an error. So go ahead and run:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ git clone https://github.com/username/username.github.io
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This concludes the first step, let’s move on to Step 2: Jekyll.&lt;/p&gt;

&lt;h2 id=&quot;step-2-jekyllhttpsjekyllrbcom&quot;&gt;Step 2: &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;So what exactly is Jekyll? Here an explanation from Jekyll’s &lt;a href=&quot;https://jekyllrb.com/docs/home/&quot;&gt;website&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;Jekyll is a simple, blog-aware, static site generator. It takes a template directory containing raw text files in various formats, runs it through a converter (like Markdown) and our Liquid renderer, and spits out a complete, ready-to-publish static website suitable for serving with your favorite web server. Jekyll also happens to be the engine behind GitHub Pages, which means you can use Jekyll to host your project’s page, blog, or website from GitHub’s servers for free.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This explanation didn’t make much sense to me when I first attempted to make my Jekyll site, so let me try to explain it in another way. Jekyll is a system of folders and files that allow you to make simple web pages. When you put this system of folders and file system on Github, it generates a website that is absolutely free. Instead of writing HTML, you write content in template documents (Markdown files) that are automatically converted to beautiful HTML pages with mobile-friendly responsiveness.&lt;/p&gt;

&lt;p&gt;Let’s go ahead with out website setup! Go back to Jekyll’s website and look at the very simple instructions they provide for quick-start installation, but don’t run them just yet!&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ gem install jekyll
$ jekyll new my-awesome-site
$ cd my-awesome-site
$ jekyll serve
# =&amp;gt; Now browse to http://localhost:4000
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We will be modifying these commands slightly to get our website up and running. The first command installs Jekyll onto your computer. Go ahead and do this, then navigate to your &lt;em&gt;username&lt;/em&gt;.github.io folder that you have cloned from Github in &lt;a href=&quot;#&quot;&gt;Step 1&lt;/a&gt;. Run the &lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; command to make sure you are in the correct working directory. The needs to be empty for this next step to work, so go ahead and run our &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; command to make sure that there is nothing inside.&lt;/p&gt;

&lt;p&gt;At this point we are ready to install Jekyll! Run the following command:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ jekyll new
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then run the &lt;code class=&quot;highlighter-rouge&quot;&gt;ls&lt;/code&gt; command and you should see the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ ls
_config.yml	_layouts	_sass		css		index.html
_includes	_posts		about.md	feed.xml
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You have installed Jekyll! At this point we can give it a test run! We are going to view our new website in our browser, but we will be running the site locally (i.e. it will not be available at &lt;em&gt;username&lt;/em&gt;.github.io).&lt;/p&gt;

&lt;p&gt;The next command will start running our website:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ jekyll serve
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;After you run this command, several lines will be printed out in the terminal. Look for one that looks like this:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;Server address: http://127.0.0.1:4000/
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This address may be different on your computer, so copy it exactly from your terminal and run it in your browser, or run &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:40001&lt;/code&gt; in your browser if that doesn’t work. You should see your website!&lt;/p&gt;

&lt;p&gt;For now it is mostly filler content, but we will learn how to edit this content in the next few steps.&lt;/p&gt;

&lt;h2 id=&quot;step-3-githubhttpsgithubcom&quot;&gt;Step 3: &lt;a href=&quot;https://github.com/&quot;&gt;Github&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;This next step will move your entire website onto the web and will make it available at &lt;em&gt;username&lt;/em&gt;.github.io.&lt;/p&gt;

&lt;p&gt;Confirm you are still in you &lt;em&gt;username&lt;/em&gt;.github.io folder (&lt;code class=&quot;highlighter-rouge&quot;&gt;pwd&lt;/code&gt; command) and run the following commands:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ git init
$ git add .
$ git commit -m &quot;initial commit&quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will have to enter your Github username and password for the last step to work. Now, if you did not get any error messages in your terminal after running the above commands, open up &lt;em&gt;username&lt;/em&gt;.github.io in your browser. You, and anyone with the link, should be able to see your website!&lt;/p&gt;

&lt;p&gt;As you make changes and additions to the &lt;em&gt;username&lt;/em&gt;.github.io file system, you can repeat this step to refresh the content of your website.&lt;/p&gt;

&lt;h2 id=&quot;step-4-making-pages-in-jekyll&quot;&gt;Step 4: Making Pages in Jekyll&lt;/h2&gt;

&lt;p&gt;At this point, the first thing I wanted to do was to create both a simple “Contact” page and a “Resume” page. The process of creating pages is simple, but there are few tutorials that explain what the simple process is in its entirety. Here’s how I understand it:&lt;/p&gt;

&lt;p&gt;Create a “top level” Markdown file in our &lt;em&gt;username&lt;/em&gt;.github.io folder. “Top level” means that it is directly inside our &lt;em&gt;username&lt;/em&gt;.github.io file and not in any subfolders. To create this folder, you will need a text editor. The number one search result for text editor in Google is &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime Text&lt;/a&gt;, which is the text editor that I prefer. You can open your entire &lt;em&gt;username&lt;/em&gt;.github.io folder with Sublime Text to easily move between files.&lt;/p&gt;

&lt;p&gt;Let’s create a contact page first. Create a new file called &lt;code class=&quot;highlighter-rouge&quot;&gt;contact.md&lt;/code&gt;. The &lt;code class=&quot;highlighter-rouge&quot;&gt;.md&lt;/code&gt; stands for Markdown and it is the type of file that you will be working with the most in Jekyll. Add the following content to this file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Markdown&quot;&gt;---
layout: page
title: &quot;Contact&quot;
---
Hi, my name is Art Vandelay. Welcome to my website! 
Follow me on twitter at [@artvandelay](http://www.twitter.com)
Connect with me on [LinkedIn](http://www.linkedin.com)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save this file, and head back over to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:4000&lt;/code&gt;, reload the page and check to see if your page was added to your site.&lt;/p&gt;

&lt;p&gt;Our &lt;code class=&quot;highlighter-rouge&quot;&gt;contact.md&lt;/code&gt; file starts with something called Front Matter, enclosed between two &lt;code class=&quot;highlighter-rouge&quot;&gt;---&lt;/code&gt; bars. In this space, you specify the type of page you are creating. In this example, wrote &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: page&lt;/code&gt; because this is a regular page. In the following examples, we will set the &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; variable to &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; when we want to create a blog post.&lt;/p&gt;

&lt;p&gt;Links are pretty easy to make in Markdown. Simply wrap the clickable link text you want displayed in brackets, immediately followed by the URL in parentheses. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;[Google](http://www.google.com)&lt;/code&gt; would result in &lt;a href=&quot;http://www.google.com&quot;&gt;Google&lt;/a&gt;. Be sure to include &lt;code class=&quot;highlighter-rouge&quot;&gt;http://&lt;/code&gt; at the beginning of your links. If you don’t, it will create a link relative to the page. For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;[Google](google.com)&lt;/code&gt; would result in &lt;code class=&quot;highlighter-rouge&quot;&gt;username.github.io/google.com&lt;/code&gt; which would not go anywhere.&lt;/p&gt;

&lt;p&gt;For the next example, create a top-level folder in your &lt;em&gt;username&lt;/em&gt;.github.io folder called &lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt; (or some other name) where you will store static files like PDFs for your site. Now put your resume in it. Next, copy the following code into a new top-level file in your &lt;em&gt;username&lt;/em&gt;.github.io folder called &lt;code class=&quot;highlighter-rouge&quot;&gt;resume&lt;/code&gt; (not in the &lt;code class=&quot;highlighter-rouge&quot;&gt;docs&lt;/code&gt; folder you just created, we are making a page here just like we did with the “Contact” page).&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Markdown&quot;&gt;---
layout: page
title: Resume
---
Here&#39;s a link to a PDF of [my resume](/docs/my_resume.pdf).
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;At this point it would be good to introduce the simple and powerful formating that you can do with Markdown. Suppose you want to include the text of your resume in a neatly organized way below the download link for your resume as I have done for &lt;a href=&quot;/CV.html&quot;&gt;my Resume page&lt;/a&gt;. Markdown makes this very easy.&lt;/p&gt;

&lt;p&gt;There are many ways to structure and organize content in Markdown, so I’ll show you how I did it and point you in the direction of some useful resources and cheat sheets. &lt;a href=&quot;https://raw.githubusercontent.com/briancaffey/briancaffey.github.io/master/CV.md&quot;&gt;Here&lt;/a&gt; is the Markdown file I used for my resume page, feel free to copy my exact formatting as I copied it from someone else! Also check out &lt;a href=&quot;http://assemble.io/docs/Cheatsheet-Markdown.html&quot;&gt;this Markdown cheat sheet&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;step-5-making-blog-posts-in-jekyll&quot;&gt;Step 5: Making blog posts in Jekyll&lt;/h2&gt;

&lt;p&gt;Making blog posts in Jekyll is slightly different from making pages in Jekyll. There are a few things you need to do to create a blog post.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Create a Markdown file with the following naming convention: YYYY-MM-DD-post-name.md&lt;/li&gt;
  &lt;li&gt;In this file’s Front Matter, set the &lt;code class=&quot;highlighter-rouge&quot;&gt;layout&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; by writing &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: post&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Set the &lt;code class=&quot;highlighter-rouge&quot;&gt;date&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; of the post in the Front Matter&lt;/li&gt;
  &lt;li&gt;Place this file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; folder&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You should see the blog post listed on your home page and your “Blog” page that comes pre-loaded with a new Jekyll site.&lt;/p&gt;

&lt;p&gt;We will talk about how to change the layout of your sites homepage, pages and posts later on. The next step will show you how allow comments using Disqus on a per-post basis.&lt;/p&gt;

&lt;h2 id=&quot;step-6-adding-comments-to-your-posts&quot;&gt;Step 6: Adding comments to your posts&lt;/h2&gt;

&lt;p&gt;To enable comments on your blog, I recommend using a free and popular comment service called &lt;a href=&quot;https://disqus.com/home/&quot;&gt;Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To enable comments with Disqus, we need to explore a new folder in our file system. In the &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folder you will find a number of files that are “snippets” of HTML code including &lt;code class=&quot;highlighter-rouge&quot;&gt;header.html&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;footer.html&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; is a folder where you will keep reusable snippets of code that will want to include in many different places in your site.&lt;/p&gt;

&lt;p&gt;Let’s make a code snippet titled &lt;code class=&quot;highlighter-rouge&quot;&gt;comments.html&lt;/code&gt;. In this file, add the following code:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;page.comments&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;



&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;endif&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Any code in between these two lines will be included if &lt;code class=&quot;highlighter-rouge&quot;&gt;pages.comments&lt;/code&gt; is set to &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;. You will set this variable value in the Front Matter as you create new posts. Next, add the following code between these two lines above:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!--&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Add&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Disqus&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&amp;gt;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;disqus_thread&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/div&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;cm&quot;&gt;/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_shortname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;YOUR_DISQUS_USERNAME&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// required: replace example with your forum shortname&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_identifier&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;{{ site.disqusid }}{{ page.url | replace:&#39;index.html&#39;,&#39;&#39; }}&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;cm&quot;&gt;/* * * DON&#39;T EDIT BELOW THIS LINE * * */&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;text/javascript&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;//&#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_shortname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;.disqus.com/embed.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;head&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;body&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;appendChild&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;dsq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Please&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;enable&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;JavaScript&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;view&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;the&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;href&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://disqus.com/?ref_noscript&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comments&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;powered&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Disqus&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/a&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;noscript&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Pay attention to the line that reads:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;disqus_shortname&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;YOUR_DISQUS_USERNAME&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// required: replace example with your forum shortname&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You will need to replace &lt;code class=&quot;highlighter-rouge&quot;&gt;YOUR_DISQUS_USERNAME&lt;/code&gt; with the name you have selected for your Disqus account. Be sure to enclose it in single quotes.&lt;/p&gt;

&lt;p&gt;Next we have to learn how to include this code snippet into all posts. Look in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; folder and open up the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;This is a template document that will determine the format of each blog post. When we specified &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: page&lt;/code&gt; in the Front Matter of our Resume and Contact pages, this caused Jekyll to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;page.html&lt;/code&gt; layout. As I mentioned before, in our posts, we will specify &lt;code class=&quot;highlighter-rouge&quot;&gt;layout: post&lt;/code&gt; in the Front Matter of our posts to use the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt; template.&lt;/p&gt;

&lt;p&gt;In this layout, we will add one line of code right before the last line of the &lt;code class=&quot;highlighter-rouge&quot;&gt;post.html&lt;/code&gt; layout template directly above the closing &lt;code&gt;&amp;lt;/article&amp;gt;&lt;/code&gt; tag:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;comments.html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now, let’s make a new blog post. Title it something like &lt;code class=&quot;highlighter-rouge&quot;&gt;2016-03-18-my-first-post.md&lt;/code&gt;. Let’s add Front Matter so Jekyll knows what to do with our post.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;---
layout: post
title: My First Post
date: 2016-03-18
comments: true
---
This is the body of my first blog post on my Jekyll blog! I hope it gets some good comments!
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Great, now you should have a new blog post with Disqus comments enabled on it. You may not be getting a lot of comments on your articles, but you still could have lots of readers. The next section will cover how to add Google Analytics to our site so we can easily track visitors and page views.&lt;/p&gt;

&lt;h2 id=&quot;step-7-adding-google-analytics-to-your-jekyll-blog&quot;&gt;Step 7: Adding Google Analytics to your Jekyll blog&lt;/h2&gt;

&lt;p&gt;Now that we know how to include a short snippet of code in multiple pages on our blog, adding one more little snippet for Google to track page views will be very easy. If you don’t know about Google Analytics, it probably the most powerful tool for tracking visitors to your website. Google makes it very easy, and only requires that we include a short snippet of JavaScript on each page we want to track.&lt;/p&gt;

&lt;p&gt;Let’s create another HTML snippet in our &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes&lt;/code&gt; folder called &lt;code class=&quot;highlighter-rouge&quot;&gt;google-analytics.html&lt;/code&gt;. You are only going to put a tracking code that will be unique to your site. Head over to &lt;a href=&quot;http://analytics.google.com&quot;&gt;Google Analytics&lt;/a&gt; to get your tracking code. After filling out a few simple forms, you should get your tracking code. It should look something like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;GoogleAnalyticsObject&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;q&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)},&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;createElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;async&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parentNode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;insertBefore&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;//www.google-analytics.com/analytics.js&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;ga&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;create&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;&amp;lt;YOUR_TRACKING_CODE&amp;gt;&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;auto&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ga&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;send&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;pageview&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/script&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Next we will need to insert this &lt;code class=&quot;highlighter-rouge&quot;&gt;google_analytics.html&lt;/code&gt; snippet each page of our site. Doing this is very easy, just add &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;google_analytics.html&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; in between the opening &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tags of the &lt;code class=&quot;highlighter-rouge&quot;&gt;default.html&lt;/code&gt; file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_layouts&lt;/code&gt; folder.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I hope you have found this tutorial helpful. At times I probably over-explained things, and there may be some areas that need clarification, so I’ll add updates and create more posts in the future as I learn more about Jekyll myself.&lt;/p&gt;

&lt;p&gt;My Jekyll blog is big experiment. It’s been both challenging and fun, but most of all I love the fact that it is totally free. I hope that anyone reading this post who wants to put together a Jekyll blog hosted with Github Pages has success in doing so. Please let me know in the comments if there are any areas that I should change, elaborate on or take out. Thanks!&lt;/p&gt;

</description>
        <pubDate>Thu, 17 Mar 2016 00:00:00 -0400</pubDate>
        <link>/2016/03/17/jekyll-tutorial.html</link>
        <guid isPermaLink="true">/2016/03/17/jekyll-tutorial.html</guid>
        
        
      </item>
    
      <item>
        <title>Including Jupyter Notebooks in Jekyll blog posts</title>
        <description>&lt;p&gt;I’ve been looking for ways to incorporate Jupyter notebooks into my new blog. This post explains a process that I’ve come across, although there may be other ways to blog directly from iPython Notebooks.&lt;/p&gt;

&lt;p&gt;This methods allows you to include styled cell input and output (including graphs, Data Frames, etc.)&lt;/p&gt;

&lt;p&gt;When you have completed your iPython Notebook (&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll_test.ipynb&lt;/code&gt; in this example), run the following command in your terminal to convert your &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll_test.ipynb&lt;/code&gt; file into Markdown:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ ipython nbconvert jekyll_test.ipynb --to markdown&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;You can read more about converting iPython Notebooks &lt;a href=&quot;https://ipython.org/ipython-doc/3/notebook/nbconvert.html&quot;&gt;here&lt;/a&gt;. In your terminal you should see the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-terminal&quot;&gt;$ ipython nbconvert jekyll_test.ipynb --to markdown
[NbConvertApp] Converting notebook jekyll_test.ipynb to markdown
[NbConvertApp] Support files will be in jekyll_test_files/
[NbConvertApp] Making directory jekyll_test_files
[NbConvertApp] Writing 286 bytes to jekyll_test.md
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This puts related image files from graphs into a new folder, &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll_test_files/&lt;/code&gt;, so you will have to make sure the path matches up. I have created a top-level folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;ipynb&lt;/code&gt; to keep things orderly.&lt;/p&gt;

&lt;p&gt;Next, copy the contents from the resulting Markdown folder into your blog post. I had to change the image file path so that images display properly.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![png](jekyll_test_files/jekyll_test_2_1.png)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I added &lt;code class=&quot;highlighter-rouge&quot;&gt;/ipynb/&lt;/code&gt; to the beginning of the path:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;![png](/ipynb/jekyll_test_files/jekyll_test_2_1.png)&lt;/code&gt;&lt;/p&gt;

&lt;h1 id=&quot;result&quot;&gt;Result&lt;/h1&gt;

&lt;p&gt;Here is the result from a simple notebook that I used here:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;matplotlib.pyplot&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[&amp;lt;matplotlib.lines.Line2D at 0x10dde4610&amp;gt;]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/ipynb/jekyll_test_files/jekyll_test_2_1.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hope you found this helpful, thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Mar 2016 00:00:00 -0400</pubDate>
        <link>/2016/03/14/ipynb-with-jekyll.html</link>
        <guid isPermaLink="true">/2016/03/14/ipynb-with-jekyll.html</guid>
        
        
      </item>
    
      <item>
        <title>Up and running with Jekyll + GitHub Pages</title>
        <description>&lt;p&gt;As a long-time WordPress user, I have decided try hosting my personal website with &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub Pages&lt;/a&gt; and &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;Jekyll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;While it has taken some getting used to Jekyll, I’ve enjoyed the process of learning how to get things set up and running. I’ll have to write up a post at some point to aggregate the guides and examples I have followed to make this site possible.&lt;/p&gt;

</description>
        <pubDate>Sat, 12 Mar 2016 17:19:08 -0500</pubDate>
        <link>/2016/03/12/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">/2016/03/12/welcome-to-jekyll.html</guid>
        
        
      </item>
    
  </channel>
</rss>
