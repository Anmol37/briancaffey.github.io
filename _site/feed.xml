<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Brian Caffey</title>
    <description>Thanks for visiting my site, please take a minute to look around!
</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 30 Nov 2017 18:47:21 -0500</pubDate>
    <lastBuildDate>Thu, 30 Nov 2017 18:47:21 -0500</lastBuildDate>
    <generator>Jekyll v3.5.1</generator>
    
      <item>
        <title>Removing root partition bloat caused by docker</title>
        <description>&lt;p&gt;Recently I’ve been having storage issues in the root partitions of both my desktop and laptop computers. These issues came up soon after I started playing around with docker. In this article I’ll talk briefly about how I fixed this problem, the resources and tools I picked up along the way, and anything else I have learned along the way.&lt;/p&gt;

&lt;p&gt;I first learned how bad this issue was when I went to install anaconda on my desktop PC. I quiclky ran &lt;code class=&quot;highlighter-rouge&quot;&gt;df -h&lt;/code&gt; and saw that my 20G root partition had less than 1G of available space. To look further into this I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;baobab&lt;/code&gt;. In the baobab home screen the root partition had slightly more space, but it was still close to being full. The expanded view was only showing me informatoin for around 8G of storage, leaving almost 11G of space not accounted for.&lt;/p&gt;

&lt;p&gt;I started reaching for different tools and packages to slim down disk usage. &lt;code class=&quot;highlighter-rouge&quot;&gt;pacgraph&lt;/code&gt; is a pretty neat way to visualize the relative size of packages. Here’s an example:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/pacgraph.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This helps you quickly find packages that you can do without. After removing some large packages like Libre Office I realized that this was barely moving the needle on my storage problem. Running &lt;code class=&quot;highlighter-rouge&quot;&gt;df -h&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;baobab&lt;/code&gt; again with root priviledges gave me slightly different results. At this point I turned to docker and deleted all of the images with `docker rmi &lt;IMAGE ID=&quot;&quot;&gt; -f. This didn't help either. Here are the images that I removed from my desktop:&lt;/IMAGE&gt;&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[brian@a1arch ~]$ docker images
REPOSITORY                              TAG                 IMAGE ID            CREATED             SIZE
flaskmicroservicesusers_users-service   latest              1e59fa4d2af5        5 days ago          739MB
&amp;lt;none&amp;gt;                                  &amp;lt;none&amp;gt;              18f9191b4d9a        5 days ago          739MB
flaskmicroservicesusers_users-db        latest              f1de1c3ef3f2        5 days ago          287MB
&amp;lt;none&amp;gt;                                  &amp;lt;none&amp;gt;              11188ac6f36a        5 days ago          712MB
postgres                                latest              599272bf538f        12 days ago         287MB
tensorflow/tensorflow                   latest-gpu          2f243a16ff63        3 weeks ago         3.36GB
python                                  3.6.2               26acbad26a2c        2 months ago        690MB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here’s the storage profile before I started remove docker-related files:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ df -h | grep /dev/sda1
/dev/sda1        20G   18G  737M  97% /
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;After I removed the docker images, here is the same command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ df -h | grep /dev/sda1
/dev/sda1        20G   18G  737M  97% /
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I found a helpful serverfault question from 6 years ago that address the issue I was having titled &lt;a href=&quot;https://serverfault.com/questions/275206/disk-full-du-tells-different-how-to-further-investigate&quot;&gt;Disk full, du tells different. How to further investigate?&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I saw a helpful comment related to docker:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Thanks - this showed that docker was filling up my hard drive with diffs in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/lib/docker/aufs/diff/&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Could this be my issue?&lt;/p&gt;

&lt;p&gt;Here’s the folder in question on my laptop:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ cd /var/lib/docker
 $ sudo du -s -h .
2.6G	.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;On my desktop this was taking up about 10G!&lt;/p&gt;

&lt;p&gt;Wow! I didn’t even see this when I ran &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo baobab&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/baobab.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I stopped the docker service and deleted the overlay2 file:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo systemctl stop docker
 $ cd /var/lib/docker
 $ sudo rm -rf layover2
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;With &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo baobab&lt;/code&gt; I was also able to delete 3.6G of trash with this command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ sudo -i
 # rm -rf /root/.local/share/Trash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I think this may be related to having previously emptied the Trash in nautilus file browser with files that I might not have owned.&lt;/p&gt;

&lt;p&gt;I think it would be a good idea to change the docker image installation directory. &lt;a href=&quot;https://forums.docker.com/t/how-do-i-change-the-docker-image-installation-directory/1169&quot;&gt;Here is a link&lt;/a&gt; from a docker forum talking about how to do that. &lt;a href=&quot;https://forums.docker.com/t/some-way-to-clean-up-identify-contents-of-var-lib-docker-overlay/30604&quot;&gt;Here is another docker forum post&lt;/a&gt; that talks about the overlay and storage issues that docker has.&lt;/p&gt;

&lt;p&gt;Here is a helpful snippet from the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Docker&quot;&gt;Arch Wiki Docker article&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Images location
By default, docker images are located at /var/lib/docker. They can be moved to other partitions. First, stop the docker.service.&lt;/p&gt;

  &lt;p&gt;If you have run the docker images, you need to make sure the images are unmounted totally. Once that is completed, you may move the images from /var/lib/docker to the target destination.&lt;/p&gt;

  &lt;p&gt;Then add a Drop-in snippet for the docker.service, adding the –data-root parameter to the ExecStart:&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/etc/systemd/system/docker.service.d/docker-storage.conf
[Service]
ExecStart= 
ExecStart=/usr/bin/dockerd --data-root=/path/to/new/location/docker -H fd://
&lt;/code&gt;&lt;/pre&gt;
  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;Update: I did this on my desktop with a &lt;code class=&quot;highlighter-rouge&quot;&gt;--data-root&lt;/code&gt; path in my home folder.&lt;/p&gt;

&lt;p&gt;I followed the directions form &lt;a href=&quot;https://linuxconfig.org/how-to-move-docker-s-default-var-lib-docker-to-another-directory-on-ubuntu-debian-linux&quot;&gt;this article&lt;/a&gt; and was able to set up docker on my home partition.&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/28/remove-root-partition-bloat-from-docker.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/28/remove-root-partition-bloat-from-docker.html</guid>
        
        
      </item>
    
      <item>
        <title>Switching from yaourt to pacaur</title>
        <description>&lt;p&gt;Since I started using Arch Linux I have been using &lt;code class=&quot;highlighter-rouge&quot;&gt;yaourt&lt;/code&gt;, a pacman wrapper with extended features and AUR support.&lt;/p&gt;

&lt;p&gt;There are lots of options, and there is a helpful &lt;a href=&quot;https://wiki.archlinux.org/index.php/AUR_helpers&quot;&gt;comparison chart&lt;/a&gt; on the Arch Wiki.&lt;/p&gt;

&lt;p&gt;One annoying part of installing packages with yaourt is that it will ask you to examine/edit the contents of PKGBUILD. Here’s an example:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ yaourt -S freecell

==&amp;gt; Downloading freecell PKGBUILD from AUR...
x .SRCINFO
x PKGBUILD
Anonymous comment on 2012-04-22 13:26			 
Your arch line is wrong!
Please change
arch=('i686' 'x64')
to
arch=('i686' 'x86_64')

freecell 1.0-4  (2015-06-10 11:30)
( Unsupported package: Potentially dangerous ! )
==&amp;gt; Edit PKGBUILD ? [Y/n] (&quot;A&quot; to abort)
==&amp;gt; ------------------------------------
==&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;What is PKGBUILD? From the Arch Wiki:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;A PKGBUILD is a shell script containing the build information required by Arch Linux packages.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;For most package installations, yaourt will also ask you to confirm installation:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;==&amp;gt; Edit PKGBUILD ? [Y/n] (&quot;A&quot; to abort)
==&amp;gt; ------------------------------------
==&amp;gt; n

==&amp;gt; freecell dependencies:
 - ncurses (already installed)


==&amp;gt; Continue building freecell ? [Y/n]
==&amp;gt; ----------------------------------
==&amp;gt; Y
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;And often times you will need to do this more than once:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[...]
==&amp;gt; Continue building freecell ? [Y/n]
==&amp;gt; ----------------------------------
==&amp;gt; Y

==&amp;gt; Building and installing package
==&amp;gt; Making package: freecell 1.0-4 (Fri Nov 24 20:58:00 EST 2017)
==&amp;gt; Checking runtime dependencies...
==&amp;gt; Checking buildtime dependencies...
==&amp;gt; Retrieving sources...
  -&amp;gt; Downloading freecell-1.0.tar.gz...
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100 87713  100 87713    0     0  87713      0  0:00:01 --:--:--  0:00:01  101k
==&amp;gt; Validating source files with md5sums...
    freecell-1.0.tar.gz ... Passed
==&amp;gt; Extracting sources...
  -&amp;gt; Extracting freecell-1.0.tar.gz with bsdtar
==&amp;gt; Starting build()...
checking for a BSD-compatible install... /usr/bin/install -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/bin/mkdir -p
checking for gawk... gawk
checking whether make sets $(MAKE)... yes
checking for gcc... gcc
checking for C compiler default output file name... a.out
checking whether the C compiler works... yes
checking whether we are cross compiling... no
checking for suffix of executables... 
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking for style of include used by make... GNU
checking dependency style of gcc... gcc3
checking for start_color in -lncurses... yes
checking how to run the C preprocessor... gcc -E
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for stdlib.h... (cached) yes
checking for string.h... (cached) yes
checking for unistd.h... (cached) yes
checking for an ANSI C-conforming const... yes
checking for stdlib.h... (cached) yes
checking for GNU libc compatible malloc... yes
checking for strdup... yes
configure: creating ./config.status
config.status: creating Makefile
config.status: creating src/Makefile
config.status: creating doc/Makefile
config.status: executing depfiles commands
Making all in src
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
gcc -DPACKAGE_NAME=\&quot;freecell\&quot; -DPACKAGE_TARNAME=\&quot;freecell\&quot; -DPACKAGE_VERSION=\&quot;1.0\&quot; -DPACKAGE_STRING=\&quot;freecell\ 1.0\&quot; -DPACKAGE_BUGREPORT=\&quot;linus@linusakesson.net\&quot; -DPACKAGE=\&quot;freecell\&quot; -DVERSION=\&quot;1.0\&quot; -DHAVE_LIBNCURSES=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STRDUP=1 -I.   -D_FORTIFY_SOURCE=2  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -MT freecell.o -MD -MP -MF .deps/freecell.Tpo -c -o freecell.o freecell.c
freecell.c:350:1: warning: return type defaults to ‘int’ [-Wimplicit-int]
 usage() {
 ^~~~~
freecell.c: In function ‘main’:
freecell.c:403:9: warning: implicit declaration of function ‘time’; did you mean ‘nice’? [-Wimplicit-function-declaration]
   srand(time(0));
         ^~~~
         nice
mv -f .deps/freecell.Tpo .deps/freecell.Po
gcc -DPACKAGE_NAME=\&quot;freecell\&quot; -DPACKAGE_TARNAME=\&quot;freecell\&quot; -DPACKAGE_VERSION=\&quot;1.0\&quot; -DPACKAGE_STRING=\&quot;freecell\ 1.0\&quot; -DPACKAGE_BUGREPORT=\&quot;linus@linusakesson.net\&quot; -DPACKAGE=\&quot;freecell\&quot; -DVERSION=\&quot;1.0\&quot; -DHAVE_LIBNCURSES=1 -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_UNISTD_H=1 -DHAVE_STDLIB_H=1 -DHAVE_MALLOC=1 -DHAVE_STRDUP=1 -I.   -D_FORTIFY_SOURCE=2  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt -MT gameno.o -MD -MP -MF .deps/gameno.Tpo -c -o gameno.o gameno.c
mv -f .deps/gameno.Tpo .deps/gameno.Po
gcc  -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fno-plt  -Wl,-O1,--sort-common,--as-needed,-z,relro,-z,now -o freecell freecell.o gameno.o  -lncurses 
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
Making all in doc
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[1]: Nothing to be done for 'all'.
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
make[1]: Nothing to be done for 'all-am'.
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
==&amp;gt; Entering fakeroot environment...
==&amp;gt; Starting package()...
Making install in src
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
make[2]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
test -z &quot;/usr/bin&quot; || /usr/bin/mkdir -p &quot;/tmp/yaourt-tmp-brian/aur-freecell/pkg/freecell/usr/bin&quot;
  /usr/bin/install -c 'freecell' '/tmp/yaourt-tmp-brian/aur-freecell/pkg/freecell/usr/bin/freecell'
make[2]: Nothing to be done for 'install-data-am'.
make[2]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/src'
Making install in doc
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[2]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[2]: Nothing to be done for 'install-exec-am'.
test -z &quot;/usr/share/man/man6&quot; || /usr/bin/mkdir -p &quot;/tmp/yaourt-tmp-brian/aur-freecell/pkg/freecell/usr/share/man/man6&quot;
 /usr/bin/install -c -m 644 './freecell.6' '/tmp/yaourt-tmp-brian/aur-freecell/pkg/freecell/usr/share/man/man6/freecell.6'
make[2]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0/doc'
make[1]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
make[2]: Entering directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
make[2]: Nothing to be done for 'install-exec-am'.
make[2]: Nothing to be done for 'install-data-am'.
make[2]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
make[1]: Leaving directory '/tmp/yaourt-tmp-brian/aur-freecell/src/freecell-1.0'
==&amp;gt; Tidying install...
  -&amp;gt; Removing libtool files...
  -&amp;gt; Purging unwanted files...
  -&amp;gt; Removing static library files...
  -&amp;gt; Stripping unneeded symbols from binaries and libraries...
  -&amp;gt; Compressing man and info pages...
==&amp;gt; Checking for packaging issue...
==&amp;gt; Creating package &quot;freecell&quot;...
  -&amp;gt; Generating .PKGINFO file...
  -&amp;gt; Generating .BUILDINFO file...
  -&amp;gt; Generating .MTREE file...
  -&amp;gt; Compressing package...
==&amp;gt; Leaving fakeroot environment.
==&amp;gt; Finished making: freecell 1.0-4 (Fri Nov 24 20:58:05 EST 2017)
==&amp;gt; Cleaning up...

==&amp;gt; Continue installing freecell ? [Y/n]
==&amp;gt; [v]iew package contents [c]heck package with namcap
==&amp;gt; ---------------------------------------------------
==&amp;gt; 

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;and you often times have to provide your password during the install process:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;==&amp;gt; Continue installing freecell ? [Y/n]
==&amp;gt; [v]iew package contents [c]heck package with namcap
==&amp;gt; ---------------------------------------------------
==&amp;gt; Y

[sudo] password for brian: 
loading packages...
resolving dependencies...
looking for conflicting packages...

Package (1)  New Version  Net Change

freecell     1.0-4          0.02 MiB

Total Installed Size:  0.02 MiB

:: Proceed with installation? [Y/n] 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This process becomes quite tedious when you are installing lots of packages. In most cases you don’t want to edit PKGBUILD, and you DO want to continue with the installation. yaourt does have flags such as &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-edit&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;--no-confirm&lt;/code&gt; that you can pass in to skip these dialogue prompts. However, in some cases there may be conflicting packages that you would want inspect.&lt;/p&gt;

&lt;p&gt;Here’s the description of the pacaur package:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aur/pacaur 4.7.10-1 [installed] (1057) (47.35)
    An AUR helper that minimizes user interaction
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Compared to the description of yaourt:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aur/yaourt 1.9-1 [installed] (2991) (16.33)
    A pacman wrapper with extended features and AUR support
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s see how pacaur holds up to it’s philosophy of minimizing user interaction:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ yaourt -R freecell &amp;amp;&amp;amp; pacaur -S freecell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The pacaur installation did ask me to confirm once at the beginning of the install process, and it automatically confirmed the second time without asking me to edit the PKGBUILD. Nice! Trying one more time with &lt;code class=&quot;highlighter-rouge&quot;&gt;--noconfirm&lt;/code&gt;, there was zero interaction between pressing ENTER and the end of the install process. Even better! Either way, using pacaur is much nicer than using yaourt for something as simple as installing freecell.&lt;/p&gt;

&lt;p&gt;It makes sense to prompt the user with any questions at the beginning of the install process and then have then package manager continue with installing the package(s).&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;I ran into signature verification issues when trying to install pacaur. This issue came up when the install process was installing cower, one of pacaur’s dependecies. Thankfully, the issue was addressed in one of the pinned comments on the &lt;a href=&quot;https://aur.archlinux.org/packages/cower/&quot;&gt;cower AUR page&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are having problems installing this package due to signature verification, please run the below before running makepkg:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ gpg --recv-keys --keyserver hkp://pgp.mit.edu 1EB2638FF56C0C53
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will add a security key to our keyring:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ gpg --list-keys
 /home/brian/.gnupg/pubring.kbx
------------------------------
pub   rsa2048 2011-06-25 [SC]
      487EACC08557AD082088DABA1EB2638FF56C0C53
uid           [ unknown] Dave Reisner &amp;lt;d@falconindy.com&amp;gt;
uid           [ unknown] Dave Reisner &amp;lt;dreisner@archlinux.org&amp;gt;
sub   rsa2048 2011-06-25 [E]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I’m not too sure about how gpg keys work or why they are important here, but there is plenty of reading to do about this topic that I will leave for a later article.&lt;/p&gt;

&lt;p&gt;Once we add this key, we can simply install pacaur with the tool that it will soon replace:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; $ yaourt -S pacaur
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The syntax and options of pacaur is similar to those of pacman and yaourt, so luckily there is nothing new to learn when switching to pacaur. I’m still new to this tool, so I’ll add any new insights to this article as I get more experience using pacaur as a package manager.&lt;/p&gt;

&lt;h2 id=&quot;updates&quot;&gt;Updates&lt;/h2&gt;

&lt;p&gt;Nothing yet.&lt;/p&gt;
</description>
        <pubDate>Fri, 24 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/24/switching-from-yaourt-to-pacaur.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/24/switching-from-yaourt-to-pacaur.html</guid>
        
        
      </item>
    
      <item>
        <title>How to enable color emoji on Arch Linux with Emoji One Font</title>
        <description>&lt;p&gt;This is a short article about how to enable color emoji on Arch Linux. I have searched for a working solution for this a few times but never found something that worked. I stumbled upon &lt;a href=&quot;https://gist.github.com/himalay/5c404a5f6653cb35154ceb3a6c606211&quot;&gt;this Gist&lt;/a&gt; that I used to hack together a solution that enables color emoji from Emoji One on Arch Linux.&lt;/p&gt;

&lt;p&gt;This setup doesn’t show all emoji in &lt;code class=&quot;highlighter-rouge&quot;&gt;urxvt&lt;/code&gt;, and I have heard that this is simply not possible, but most other programs and UIs display the emoji just fine. Here’s what I did:&lt;/p&gt;

&lt;p&gt;First, install &lt;code class=&quot;highlighter-rouge&quot;&gt;tff-emojione&lt;/code&gt;, a package that seems to have been added to the AUR just a week ago.&lt;/p&gt;

&lt;p&gt;Next, run the script from the gist mentioned above:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# create folders if does not exist
mkdir -p ~/.fonts
mkdir -p ~/.config/fontconfig/

# download noto color emoji font from https://www.google.com/get/noto/#emoji-zsye-color
# extract NotoColorEmoji.ttf file into ~/.fonts/

# create font config file
cat &amp;lt;&amp;lt; 'EOF' &amp;gt; ~/.config/fontconfig/fonts.conf
&amp;lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&amp;gt;&amp;lt;!DOCTYPE fontconfig SYSTEM &quot;fonts.dtd&quot;&amp;gt;
&amp;lt;match&amp;gt;
 &amp;lt;test name=&quot;family&quot;&amp;gt;&amp;lt;string&amp;gt;sans-serif&amp;lt;/string&amp;gt;&amp;lt;/test&amp;gt;
 &amp;lt;edit name=&quot;family&quot; mode=&quot;prepend&quot; binding=&quot;strong&quot;&amp;gt;
 &amp;lt;string&amp;gt;Noto Color Emoji&amp;lt;/string&amp;gt;
 &amp;lt;/edit&amp;gt;
 &amp;lt;/match&amp;gt;
&amp;lt;match&amp;gt;
 &amp;lt;test name=&quot;family&quot;&amp;gt;&amp;lt;string&amp;gt;serif&amp;lt;/string&amp;gt;&amp;lt;/test&amp;gt;
 &amp;lt;edit name=&quot;family&quot; mode=&quot;prepend&quot; binding=&quot;strong&quot;&amp;gt;
 &amp;lt;string&amp;gt;Noto Color Emoji&amp;lt;/string&amp;gt;
 &amp;lt;/edit&amp;gt;
 &amp;lt;/match&amp;gt;
&amp;lt;match&amp;gt;
 &amp;lt;test name=&quot;family&quot;&amp;gt;&amp;lt;string&amp;gt;Apple Color Emoji&amp;lt;/string&amp;gt;&amp;lt;/test&amp;gt;
 &amp;lt;edit name=&quot;family&quot; mode=&quot;prepend&quot; binding=&quot;strong&quot;&amp;gt;
 &amp;lt;string&amp;gt;Noto Color Emoji&amp;lt;/string&amp;gt;
 &amp;lt;/edit&amp;gt;
 &amp;lt;/match&amp;gt;
EOF
# build font information cache files
fc-cache -f -v 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;As recommended in the comments of the gist, you will notice that numbers in most applications are represented with emoji numbers.&lt;/p&gt;

&lt;p&gt;To fix this, remove all three instances of &lt;code class=&quot;highlighter-rouge&quot;&gt;mode=&quot;prepend&quot; binding=&quot;strong&quot;&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/fontconfig/fonts.conf&lt;/code&gt; and then run &lt;code class=&quot;highlighter-rouge&quot;&gt;fc-cache -f -v &lt;/code&gt;. This should fix some issues, but you may notice that spaces between words are not displayed in some applications and some of the instances of numbers displayed as emoji should be have fixed, but not all. Once I removed all of the text from &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.config/fontconfig/fonts.conf&lt;/code&gt; and ran &lt;code class=&quot;highlighter-rouge&quot;&gt;fc-cache -f -v &lt;/code&gt; one more time, I seemed to get the space and number issues to go away while the emoji still work!&lt;/p&gt;

&lt;p&gt;I’m really not sure how or why this works, but it has solved the issue I’ve been having of emojis not displaying. Hopefully this helps if you are trying to add color emoji to your Arch Linux installation. Apparently the next version of Ubuntu will include support for color emoji out of the box, but for now you will have to hack together your own solution for Arch Linux.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/20/how-to-get-color-emoji-in-arch-linux.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/20/how-to-get-color-emoji-in-arch-linux.html</guid>
        
        
      </item>
    
      <item>
        <title>Using Tensorflow and Tensorboard with Docker</title>
        <description>&lt;p&gt;In my last article we set up Tensorflow with Docker. Next I want to try to get Tensorboard running.&lt;/p&gt;

&lt;p&gt;When we opened the Jupyter notebook, our command included port mapping. Here is that command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; nvidia-docker run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Tensorboard will be served in our browser on port &lt;code class=&quot;highlighter-rouge&quot;&gt;6006&lt;/code&gt;, so we will want to do that port mapping in our &lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-docker&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo nvidia-docker run -p 0.0.0.0:6006:6006 -it tensorflow/tensorflow:latest-gpu bash
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I want to run &lt;a href=&quot;https://github.com/tensorflow/tensorflow/blob/master/tensorflow/examples/tutorials/mnist/mnist_with_summaries.py&quot;&gt;this script&lt;/a&gt; from the Tensorflow github repo. It is an example of MNIST with summaries. Summaries are logs that are captured from script and they provide the data that runs Tensorboard. In this case they are recorded in &lt;code class=&quot;highlighter-rouge&quot;&gt;/tmp/tensorflow/mnist/logs/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;To start with this script let’s just copy and paste it into a file. We will need to add vim to our docker container for that:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;apt-get&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; update
&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;apt-get&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; install vim
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can copy and paste the script and run it:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@eb9e069064d7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;~&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# python tb.py &lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Successfully&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downloaded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9912422&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Extracting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Successfully&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downloaded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28881&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Extracting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Successfully&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downloaded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t10k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1648877&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Extracting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t10k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;images&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Successfully&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;downloaded&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;t10k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4542&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Extracting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mnist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;input_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;t10k&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;idx1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ubyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gz&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;53.792141&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;platform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cpu_feature_guard&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;137&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Your&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CPU&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;supports&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;instructions&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;that&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TensorFlow&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binary&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;was&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;compiled&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SSE4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SSE4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AVX&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AVX2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FMA&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2017&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;03&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;53.878640&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stream_executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cuda_gpu_executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;892&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;successful&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;read&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;SysFS&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;had&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;negative&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(-1),&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;but&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;there&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;must&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;least&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;NUMA&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;so&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;returning&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;NUMA&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;zero&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
2017-11-20&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;03:52:53&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.878892&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;common_runtime&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gpu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gpu_device.cc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:1030]&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Found&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeForce&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GTX&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1080&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;major&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;6&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;minor&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;memoryClockRate&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;GHz&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;):&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.7335&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;pciBusID&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0000:01:00&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;totalMemory&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.92GiB&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;freeMemory&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.43GiB&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
2017-11-20&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;03:52:53&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.878904&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;common_runtime&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gpu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;gpu_device.cc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:1120]&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;Creating&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;TensorFlow&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;GPU&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:0)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;device&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GeForce&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;GTX&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;1080,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pci&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;bus&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0000:01:00&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;compute&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;capability&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;)
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.1235&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;10:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.7297&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;20:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.8414&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;30:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.8717&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;40:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.886&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;50:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.896&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;60:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9027&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;70:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9068&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;80:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9101&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;90:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9121&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
2017-11-20&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;03:52:57&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.583676&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;I&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;tensorflow&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;stream_executor&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;dso_loader.cc&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:139]&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;successfully&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;opened&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;CUDA&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;library&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;libcupti.so.8.0&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;locally&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;99
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;100:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9124&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;110:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9164&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;120:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9198&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;130:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9205&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;140:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9142&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;150:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9224&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;160:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9294&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;170:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.928&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;180:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9312&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;190:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9301&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;199
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;200:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9346&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;210:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9381&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;220:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9396&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;230:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9406&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;240:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9273&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;250:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.941&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;260:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9369&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;270:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9329&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;280:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9404&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;290:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9444&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;299
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;300:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9438&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;310:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9426&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;320:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9462&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;330:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9449&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;340:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9478&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;350:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9458&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;360:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9464&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;370:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9474&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;380:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9528&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;390:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9499&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;399
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;400:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9507&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;410:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9501&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;420:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9513&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;430:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9483&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;440:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9518&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;450:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.949&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;460:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9543&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;470:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9552&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;480:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9515&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;490:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9544&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;499
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;500:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9586&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;510:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9567&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;520:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9572&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;530:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9574&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;540:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9584&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;550:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9593&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;560:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.958&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;570:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9575&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;580:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9582&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;590:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9609&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;599
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;600:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9618&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;610:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9605&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;620:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9606&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;630:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.961&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;640:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.963&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;650:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9614&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;660:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9622&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;670:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9634&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;680:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9641&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;690:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9627&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;699
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;700:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9623&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;710:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9612&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;720:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9628&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;730:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.965&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;740:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9635&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;750:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9635&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;760:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9648&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;770:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9637&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;780:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9658&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;790:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9649&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;799
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;800:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9681&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;810:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9661&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;820:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9657&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;830:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9646&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;840:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9647&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;850:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.965&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;860:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9677&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;870:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9649&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;880:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9675&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;890:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.969&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;899
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;900:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9689&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;910:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.967&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;920:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9672&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;930:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9645&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;940:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9657&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;950:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9699&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;960:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.968&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;970:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9679&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;980:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9651&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Accuracy&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;990:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;.9683&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nn&quot;&gt;Adding&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;run&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metadata&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;999
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The script completed successfully! Now we can can take a look at what happened during the training. Launch Tensorboard with the following command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;root@eb9e069064d7:~# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;tensorboard&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; --logdir=/tmp/tensorflow/mnist/logs/
&lt;/span&gt;TensorBoard 0.4.0rc2 at http://eb9e069064d7:6006 (Press CTRL+C to quit)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we can simply navigate to &lt;code class=&quot;highlighter-rouge&quot;&gt;localhost:6006&lt;/code&gt; in our browser to start using Tensorboard. Here’s a screenshot of Tensorboard showing accuracy:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/tf.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This wasn’t too bad. The MNIST example included a very nice script with everything set up properly. My next big challenge is to implement some type of learning model with a data set of my own and visualize it with TensorBoard, but I’ll have to go through several examples before then.&lt;/p&gt;
</description>
        <pubDate>Mon, 20 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/20/using-tensorflow-and-tensor-board-with-docker.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/20/using-tensorflow-and-tensor-board-with-docker.html</guid>
        
        
      </item>
    
      <item>
        <title>Installing the GPU version of Tensorflow with Docker on Arch Linux</title>
        <description>&lt;p&gt;I’ve tried installing the GPU version of Tensorflow a few times before and failed. There seems to be lots of confusion about the build process, of which there are many. Also, over the last few years there have been many new versions of the software needed to support the GPU version of Tensorflow as well as the first official release of Tensorflow itself (which is now on version 1.4), such as CUDA and cudnn, and different version of python. This is one more attempt at installing the GPU version of Tensor Flow on my Desktop PC that is currently dual booting with Arch Linux and Windows 10. I’ve decided to try going the docker route because it should eliminate some of the headache of missing depedencies. Here are the specs for my computer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;i7-6700K&lt;/li&gt;
  &lt;li&gt;NVIDIA GTX 1080&lt;/li&gt;
  &lt;li&gt;Asus Hero VIII motherboard&lt;/li&gt;
  &lt;li&gt;Arch Linux on a 128 GB SSD (Windows 10 is installed on a separate SSD)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;installing-cuda-and-cudnn&quot;&gt;Installing CUDA and cudnn&lt;/h2&gt;

&lt;p&gt;We don’t need to install these when installing Tensorflow with Docker. Read to the bottom for more info.&lt;/p&gt;

&lt;h2 id=&quot;installing-docker&quot;&gt;Installing Docker&lt;/h2&gt;

&lt;p&gt;To install docker on our machine, let’s start with the &lt;a href=&quot;https://wiki.archlinux.org/index.php/Docker&quot;&gt;Arch Wiki article on docker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We need to add the Loopback module to the Linux Kernel, so we run:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;tee&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; /etc/modules-load.d/loop.conf &amp;lt;&amp;lt;&amp;lt; &quot;loop&quot;
&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;modprobe&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; loop
&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;reboot&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Ater rebooting we can install docker:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yaourt -S docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Now we want to add ourself to the docker group with the following command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; gpasswd -a brian docker
&lt;/span&gt;[sudo] password for brian: 
Adding user brian to group docker
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;If you run &lt;code class=&quot;highlighter-rouge&quot;&gt;groups&lt;/code&gt;, you won’t see docker listed in the groups you (brian) belong to. Run &lt;code class=&quot;highlighter-rouge&quot;&gt;newgrp docker&lt;/code&gt; and then re-run docker and you should see &lt;code class=&quot;highlighter-rouge&quot;&gt;docker&lt;/code&gt; listed with any other groups you belong to:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[brian@a1arch ~]$ groups
wheel storage power users
[brian@a1arch ~]$ newgrp docker
                   -`                    brian@a1arch
                  .o+`                   ------------
                 `ooo/                   OS: Arch Linux x86_64
                `+oooo:                  Kernel: 4.12.8-2-ARCH
               `+oooooo:                 Uptime: 6 mins
               -+oooooo+:                Packages: 1127
             `/:-:++oooo+:               Shell: bash 4.4.12
            `/++++/+++++++:              Resolution: 1920x1080
           `/++++++++++++++:             WM: i3
          `/+++ooooooooooooo/`           Theme: Adwaita [GTK2]
         ./ooosssso++osssssso+`          Icons: Adwaita [GTK2]
        .oossssso-````/ossssss+`         Terminal: urxvt
       -osssssso.      :ssssssso.        Terminal Font: Inconsolata-12
      :osssssss/        osssso+++.       CPU: Intel i7-6700K (8) @ 4.200GHz
     /ossssssss/        +ssssooo/-       GPU: NVIDIA GeForce GTX 1080
   `/ossssso+/:-        -:/+osssso+-     Memory: 3289MiB / 15975MiB
  `+sso+:-`                 `.-/+oso: 
 `++:.                           `-/+/                           
 .`                                 `/ 

[brian@a1arch ~]$ groups
docker wheel storage power users
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Doing this prevents us from having to write sudo each time we run docker.&lt;/p&gt;

&lt;p&gt;Next we need to start the docker daemon.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ systemctl start docker
==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ====
Authentication is required to start 'docker.service'.
Authenticating as: brian
Password: 
==== AUTHENTICATION COMPLETE ====
$
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;h3 id=&quot;side-note&quot;&gt;Side note&lt;/h3&gt;

&lt;p&gt;There seems to be an &lt;a href=&quot;https://github.com/moby/moby/issues/23289&quot;&gt;Arch Linux-specific bug&lt;/a&gt; which prevents us from enabling docker (and nvidia-docker which we will get next). There is a solution to downgrade to an older version of docker, or you can just start the docker service and the nvidia-docker service when you want to use them. I have found it faster to first start nvidia-docker and then start docker services.&lt;/p&gt;

&lt;p&gt;So far so good. Next let’s look at the Tensorflow documentation for installing Tensorflow with docker.&lt;/p&gt;

&lt;p&gt;We need to install &lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-docker&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;yaourt&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; -S nvidia-docker
&lt;/span&gt;[...]
[sudo] password for brian: 
loading packages...
resolving dependencies...
looking for conflicting packages...

Packages (1) nvidia-docker-1.0.1-1

Total Installed Size:  13.34 MiB

:: Proceed with installation? [Y/n] 
(1/1) checking keys in keyring                                 [##################################] 100%
(1/1) checking package integrity                               [##################################] 100%
(1/1) loading package files                                    [##################################] 100%
(1/1) checking for file conflicts                              [##################################] 100%
(1/1) checking available disk space                            [##################################] 100%
:: Processing package changes...
(1/1) installing nvidia-docker                                 [##################################] 100%
=&amp;gt; Prior to running 'CUDA'-containers, ensure that the nvidia-docker-plugin
   is loaded. -&amp;gt; https://github.com/NVIDIA/nvidia-docker#other-distributions

*) manually; sudo -b nohup nvidia-docker-plugin &amp;gt; /tmp/nvidia-docker.log

*) automatically at startup; systemctl enable nvidia-docker.service
Optional dependencies for nvidia-docker
    cuda [installed]
    nvidia [installed]
    opencl-nvidia [installed]
:: Running post-transaction hooks...
(1/1) Arming ConditionNeedsUpdate...
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next it says: Launch a Docker container that contains one of the TensorFlow binary images. Those images are available &lt;a href=&quot;https://hub.docker.com/r/tensorflow/tensorflow/tags/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next I pulled the container with the &lt;code class=&quot;highlighter-rouge&quot;&gt;gpu-latest&lt;/code&gt; tag and it started to download the container:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; pull tensorflow/tensorflow:gpu-latest
&lt;/span&gt;[sudo] password for brian: 
latest-gpu: Pulling from tensorflow/tensorflow
ae79f2514705: Pull complete 
c59d01a7e4ca: Pull complete 
41ba73a9054d: Pull complete 
f1bbfd495cc1: Pull complete 
0c346f7223e2: Pull complete 
5dcd01667896: Pull complete 
ca677f607487: Downloading  180.7MB/453MB
b4637619a887: Download complete 
8c644ff287da: Downloading    224MB/465.6MB
119c5f576e79: Download complete 
009f82e71a7c: Download complete 
dbc0fb5872c7: Downloading  17.83MB/66.54MB
5ef01389c5b2: Waiting 
04f824004b76: Waiting 
5861b82f52e5: Waiting 
a495a3b4e6e1: Waiting 
3a0a25b1bbaf: Pulling fs layer 
b76a0afeb1e1: Waiting 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It finished after several minutes:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ca677f607487: Pull complete 
b4637619a887: Pull complete 
8c644ff287da: Pull complete 
119c5f576e79: Pull complete 
009f82e71a7c: Pull complete 
dbc0fb5872c7: Pull complete 
5ef01389c5b2: Pull complete 
04f824004b76: Pull complete 
5861b82f52e5: Pull complete 
a495a3b4e6e1: Pull complete 
3a0a25b1bbaf: Pull complete 
b76a0afeb1e1: Pull complete 
Digest: sha256:90e27448121b321c5ec66069fb2c718301df2ddaf25ba916b6f53719141572b0
Status: Downloaded newer image for tensorflow/tensorflow:latest-gpu
&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Let’s verify that it has the image:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;docker&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; images
&lt;/span&gt;REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE
tensorflow/tensorflow   latest-gpu          2f243a16ff63        13 days ago         3.36GB
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Next let’s start the &lt;code class=&quot;highlighter-rouge&quot;&gt;nvidia-docker&lt;/code&gt; service:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;systemctl&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; start nvidia-docker
&lt;/span&gt;==== AUTHENTICATING FOR org.freedesktop.systemd1.manage-units ====
Authentication is required to start 'nvidia-docker.service'.
Authenticating as: brian
Password: 
==== AUTHENTICATION COMPLETE ====
&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;OK, we should be ready to launch the image:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;nvidia-docker&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; run -it tensorflow/tensorflow:latest-gpu bash
&lt;/span&gt;&lt;span class=&quot;ni&quot;&gt;root@761a62c1cff1:/notebooks# &lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is looking good. Let’s try to start python:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;root@761a62c1cff1:/notebooks# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;Python 2.7.12 (default, Nov 19 2016, 06:48:10) 
[GCC 5.4.0 20160609] on linux2
Type &quot;help&quot;, &quot;copyright&quot;, &quot;credits&quot; or &quot;license&quot; for more information.
&amp;gt;&amp;gt;&amp;gt; import tensorflow as tf
&amp;gt;&amp;gt;&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;That works! Let’s try out the classic MNIST hand-written digit classification problem that comes packaged as a notebook with the container image:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;nvidia-docker&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; run -it -p 8888:8888 tensorflow/tensorflow:latest-gpu
&lt;/span&gt;[sudo] password for brian: 
[I 21:54:26.671 NotebookApp] Writing notebook server cookie secret to /root/.local/share/jupyter/runtime/notebook_cookie_secret
[W 21:54:26.689 NotebookApp] WARNING: The notebook server is listening on all IP addresses and not using encryption. This is not recommended.
[I 21:54:26.693 NotebookApp] Serving notebooks from local directory: /notebooks
[I 21:54:26.693 NotebookApp] 0 active kernels
[I 21:54:26.693 NotebookApp] The Jupyter Notebook is running at:
[I 21:54:26.693 NotebookApp] http://[all ip addresses on your system]:8888/?token=cda89aff96a3d4a9741cc755aac07f65f3aa372f60a198bd
[I 21:54:26.693 NotebookApp] Use Control-C to stop this server and shut down all kernels (twice to skip confirmation).
[C 21:54:26.693 NotebookApp] 
    
    Copy/paste this URL into your browser when you connect for the first time,
    to login with a token:
        http://localhost:8888/?token=cda89aff96a3d4a9741cc755aac07f65f3aa372f60a198bd
[I 21:54:34.489 NotebookApp] 302 GET /?token=cda89aff96a3d4a9741cc755aac07f65f3aa372f60a198bd (172.17.0.1) 0.32ms
[I 21:54:59.019 NotebookApp] Writing notebook-signing key to /root/.local/share/jupyter/notebook_secret
[W 21:54:59.023 NotebookApp] Notebook 3_mnist_from_scratch.ipynb is not trusted
[W 21:54:59.049 NotebookApp] 404 GET /nbextensions/widgets/notebook/js/extension.js?v=20171119215426 (172.17.0.1) 4.38ms referer=http://localhost:8888/notebooks/3_mnist_from_scratch.ipynb
[I 21:54:59.813 NotebookApp] Kernel started: 00027a3e-59ae-47ce-90a5-752a9d1fe075
[I 21:55:00.199 NotebookApp] Adapting to protocol v5.1 for kernel 00027a3e-59ae-47ce-90a5-752a9d1fe075
[I 21:56:59.815 NotebookApp] Saving file at /3_mnist_from_scratch.ipynb
[W 21:56:59.816 NotebookApp] Notebook 3_mnist_from_scratch.ipynb is not trusted
2017-11-19 21:57:03.988627: I tensorflow/core/platform/cpu_feature_guard.cc:137] Your CPU supports instructions that this TensorFlow binary was not compiled to use: SSE4.1 SSE4.2 AVX AVX2 FMA
2017-11-19 21:57:04.070873: I tensorflow/stream_executor/cuda/cuda_gpu_executor.cc:892] successful NUMA node read from SysFS had negative value (-1), but there must be at least one NUMA node, so returning NUMA node zero
2017-11-19 21:57:04.071129: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1030] Found device 0 with properties: 
name: GeForce GTX 1080 major: 6 minor: 1 memoryClockRate(GHz): 1.7335
pciBusID: 0000:01:00.0
totalMemory: 7.92GiB freeMemory: 7.44GiB
2017-11-19 21:57:04.071143: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1120] Creating TensorFlow device (/device:GPU:0) -&amp;gt; (device: 0, name: GeForce GTX 1080, pci bus id: 0000:01:00.0, compute capability: 6.1)
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I was only able to get the entire notebook to run after making a few small configuration tweaks to the tensorflow Interactive Session to fix some memory issues:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;gpu_options&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;GPUOptions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;per_process_gpu_memory_fraction&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InteractiveSession&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ConfigProto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpu_options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gpu_options&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Use our newly created session as the default for &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# subsequent operations.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;as_default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Initialize all the variables we defined above.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;global_variables_initializer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Without setting &lt;code class=&quot;highlighter-rouge&quot;&gt;gpu_options&lt;/code&gt;, Tensorflow allocates 95% of available GPU memory (according to &lt;a href=&quot;https://stackoverflow.com/questions/34514324/error-using-tensorflow-with-gpu&quot;&gt;this SO question&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Setting it to &lt;code class=&quot;highlighter-rouge&quot;&gt;0.333&lt;/code&gt; was too low and didn’t allow for training to complete, but setting it to &lt;code class=&quot;highlighter-rouge&quot;&gt;0.75&lt;/code&gt; seemed to work just fine.&lt;/p&gt;

&lt;p&gt;You can monitor GPU memory usage on NVIDIA cards with the following command:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nvidia-smi
Sun Nov 19 17:03:03 2017       
+-----------------------------------------------------------------------------+
| NVIDIA-SMI 384.59                 Driver Version: 384.59                    |
|-------------------------------+----------------------+----------------------+
| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |
| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |
|===============================+======================+======================|
|   0  GeForce GTX 1080    Off  | 00000000:01:00.0  On |                  N/A |
| 27%   32C    P8    10W / 180W |   6707MiB /  8105MiB |      0%      Default |
+-------------------------------+----------------------+----------------------+
                                                                               
+-----------------------------------------------------------------------------+
| Processes:                                                       GPU Memory |
|  GPU       PID  Type  Process name                               Usage      |
|=============================================================================|
|    0       350    C   /usr/bin/python                               6365MiB |
|    0       554    G   /usr/lib/xorg-server/Xorg                       19MiB |
|    0       588    G   /usr/bin/gnome-shell                            28MiB |
|    0       853    G   /usr/lib/xorg-server/Xorg                      186MiB |
|    0       873    G   compton                                          2MiB |
|    0      1114    G   ...el-token=A50C2F183DB4F79482A2D8768ED1B285    64MiB |
|    0      2190    G   ...el-token=1AC796A35DBDCDBE07AEC2FC1E8026C4    35MiB |
+-----------------------------------------------------------------------------+
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;I think this was a success! I’m fairly certain that we were leveraging the GPU to run the MNIST hand-written digit notebook. I didn’t see messages that CUDNN loaded, but I can find versions of both CUDNN and CUDA in the docker image:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;root@80f65a971e9a:/# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; /usr/include/x86_64-linux-gnu/                                  
&lt;/span&gt;a.out.h  bits  cudnn_v6.h      fpu_control.h  gnu        python2.7
asm      c++   expat_config.h  freetype2      ieee754.h  sys
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;root@80f65a971e9a:/# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;nvcc&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; --version
&lt;/span&gt;nvcc: NVIDIA (R) Cuda compiler driver
Copyright (c) 2005-2016 NVIDIA Corporation
Built on Tue_Jan_10_13:22:03_CST_2017
Cuda compilation tools, release 8.0, V8.0.61
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In previous attempts I had to register for an NVIDIA developer account and install these packages, but they seem to be packaged with the container.&lt;/p&gt;

&lt;p&gt;Finally, we can check the installed python packages:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;ni&quot;&gt;root@80f65a971e9a:~# &lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;pip&lt;/span&gt;&lt;span class=&quot;kv&quot;&gt; freeze | grep tensorflow
&lt;/span&gt;tensorflow-gpu==1.4.0
tensorflow-tensorboard==0.4.0rc2
&lt;span class=&quot;ni&quot;&gt;root@80f65a971e9a:~# &lt;/span&gt;&lt;span class=&quot;kv&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This looks good, but I’m still not 100% sure that everything was done properly. I would like to learn more about Tensorflow and also play around with some examples using Tensorboard. Let me know if you have any questions or comments about this setup, I’m still learning! Thanks for reading.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/19/tensorflow-gpu-setup-with-docker-on-arch-linux.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/19/tensorflow-gpu-setup-with-docker-on-arch-linux.html</guid>
        
        
      </item>
    
      <item>
        <title>Automating Django deployment with a Deploy-to-Heroku button</title>
        <description>&lt;p&gt;For recent project and hackathons I have been using the same Django project template outlined in an article I wrote last year about how to deploy a Django project on Heroku. In this article I want to update the process I have been using to deploy Django projects and get a “Deploy to Heroku” button working so I (or anyone else) can spin up a new project as fast as possible. This is what the button looks like:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;#&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.png&quot; alt=&quot;Deploy&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Here are some things that I will be adding to the project that I didn’t include in my last article/tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Django Rest Framework (DRF)&lt;/li&gt;
  &lt;li&gt;Enabling CORS (useful if you are using Django as your backend only with a separate front-end)&lt;/li&gt;
  &lt;li&gt;A sample app with a simple model to show how I organize API related info&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There is pretty good &lt;a href=&quot;https://blog.heroku.com/heroku-button&quot;&gt;documentation&lt;/a&gt; from Heroku on how to set up a one-click deploy button with Heroku, but I had to troubleshoot a few issues that were giving me errors during the deploy process.&lt;/p&gt;

&lt;p&gt;The process of making a one-click deploy button is very simple. For Django projects, we just need to add an &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt; file to our base directory. Here is the &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt; file for my Django template app:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Django One Click App&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A Template for a Django Projec that uses Django Rest Framework&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;repository&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://github.com/briancaffey/oneclickapp&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;keywords&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;django&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;python&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;heroku&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;success_url&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/success&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;env&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;DISABLE_COLLECTSTATIC&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; 
    &lt;span class=&quot;s2&quot;&gt;&quot;SECRET_KEY&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;description&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;A secret key for verifying the integrity of signed cookies.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;generator&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;secret&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
  &lt;span class=&quot;s2&quot;&gt;&quot;addons&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	    &lt;span class=&quot;s2&quot;&gt;&quot;plan&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;heroku-postgresql&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; 
  &lt;span class=&quot;s2&quot;&gt;&quot;scripts&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;s2&quot;&gt;&quot;postdeploy&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./postdeploy.sh&quot;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;It is very important that you include &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;DISABLE_COLLECTSTATIC&quot;:&quot;1&quot;,&lt;/code&gt; in the &lt;code class=&quot;highlighter-rouge&quot;&gt;env&lt;/code&gt; section of &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt;. &lt;a href=&quot;https://devcenter.heroku.com/articles/django-assets&quot;&gt;Here&lt;/a&gt; is a Heroku article that explains this issue in more detail.&lt;/p&gt;

&lt;p&gt;I found a &lt;a href=&quot;https://stackoverflow.com/questions/40985063/how-to-run-postdeploy-scripts-in-heroku-button-app-json&quot;&gt;helpful answer&lt;/a&gt; on StackOverflow regarding the &lt;code class=&quot;highlighter-rouge&quot;&gt;scripts&lt;/code&gt; portion of &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt;. If you want to call multiple commands once the app has been built successfully, you can simply execute a bash script. Make sure that this script has execute permissions by running the following command on the file locally before committing it to your repo:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo chmod +x postdeploy.sh
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Here is my &lt;code class=&quot;highlighter-rouge&quot;&gt;postdeploy.sh&lt;/code&gt; script:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python manage.py migrate
echo &quot;from django.contrib.auth.models import User; User.objects.create_superuser('admin', 'admin@example.com', 'password')&quot; | python manage.py shell
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;First, I make migrations and then I run the equivalent of &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py createsuperuser&lt;/code&gt; with a default username and password for a simple admin user.&lt;/p&gt;

&lt;h2 id=&quot;the-deploy-button&quot;&gt;The Deploy Button&lt;/h2&gt;

&lt;p&gt;Here’s an example of how to make this with markdown:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[![Deploy](https://www.herokucdn.com/deploy/button.png)](https://heroku.com/deploy?template=https://github.com/briancaffey/oneclickapp
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;To clarify, the link portion should be:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&quot;https://heroku.com/deploy&quot; + &quot;?template=&quot; + &amp;lt;github repo URL&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This needs to be a GitHub repo.&lt;/p&gt;

&lt;p&gt;This should result in a button that looks like this:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://heroku.com/deploy?template=https://github.com/briancaffey/oneclickapp&quot;&gt;&lt;img src=&quot;https://www.herokucdn.com/deploy/button.png&quot; alt=&quot;Deploy&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Feel free to try it out! This button will bring you to a Heroku page that lets you choose a custom name (a Heroku subdomain) for your new app. Once you click “Deploy”, you will see the build process and then you will be able to click “View”. This takes you to the &lt;code class=&quot;highlighter-rouge&quot;&gt;success&lt;/code&gt; page that I specified in the &lt;code class=&quot;highlighter-rouge&quot;&gt;success_url&lt;/code&gt; field of &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;how-to-edit-a-newly-deployed-project&quot;&gt;How to edit a newly deployed project&lt;/h2&gt;

&lt;p&gt;Once you have deployed the app to Heroku you should clone the Heroku git repo to your local machine with the following command:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;heroku git:clone -a yourappname
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Replace &lt;code class=&quot;highlighter-rouge&quot;&gt;yourappname&lt;/code&gt; with the name of your app. For Django projects like this you should first create a virtual environment in your workspace and then create an &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folder in which you clone this repo. Then you should run the following command from inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;src&lt;/code&gt; folder:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp yourappname/settings/base.py yourappname/settings/local.py
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This will give you a settings file that you can use locally. Finally, run the app locally to make sure it is working properly:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;There is more you can do with &lt;code class=&quot;highlighter-rouge&quot;&gt;app.json&lt;/code&gt; to customize how the app behaves when deployed, such as specifying deployment environments, but I won’t touch on those for now.&lt;/p&gt;

&lt;p&gt;Hopefully this helps you if you are trying to create a “Deploy-to-Heroku” button for a Django project. Thanks for reading!&lt;/p&gt;
</description>
        <pubDate>Sat, 11 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/11/creating-a-heroku-deploy-button-for-django-template-project.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/11/creating-a-heroku-deploy-button-for-django-template-project.html</guid>
        
        
      </item>
    
      <item>
        <title>Fixing IPython module import errors</title>
        <description>&lt;p&gt;This is a short article discussing a fix for an issue I recently had with module imports failing in IPython and Jupyter notebooks. The module I wanted to import in my Jupyter notebook, &lt;code class=&quot;highlighter-rouge&quot;&gt;geopandas&lt;/code&gt;, was able to be successfully imported in the terminal, but was failing in both the IPython interactive terminal and in my Jupyter notebook environment.&lt;/p&gt;

&lt;p&gt;I came across the following suggestion on &lt;a href=&quot;https://github.com/jupyter/notebook/issues/1524&quot;&gt;this&lt;/a&gt; issue discussion on Github:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ /Users/abc/anaconda/bin/python -m pip install ipykernel
$ /Users/abc/anaconda/bin/python -m  ipykernel install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Running this command told me that the package was already installed. Since I am using a virtual environment (with Anaconda), I need to install this in the virtual environment. To get the path we can run the following in IPython:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executable&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For me this prints out the following:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/brian/anaconda3/envs/c4dc/bin/python
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, what worked for me was to run the following commands:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/brian/anaconda3/envs/c4dc/bin/python -m pip install ipykernel
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This installed the IPython kernal and I was able to successfully import &lt;code class=&quot;highlighter-rouge&quot;&gt;geopandas&lt;/code&gt; into my Jupyter notebook. Hopefully this helps you if you are having an trouble making imports with IPython or Jupyter notebooks.&lt;/p&gt;
</description>
        <pubDate>Tue, 07 Nov 2017 00:00:00 -0500</pubDate>
        <link>http://localhost:4000/2017/11/07/fixing-ipython-module-import-errors.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/07/fixing-ipython-module-import-errors.html</guid>
        
        
      </item>
    
      <item>
        <title>Capital One Code &lt; FAM /&gt; Hackathon recap</title>
        <description>&lt;p&gt;Over the weekend I participated in the Capital One’s &lt;strong&gt;Code &amp;lt; FAM /&amp;gt;&lt;/strong&gt; hackathon at the National Union Building. After the kickoff event I formed a team with 5 other hackathon attendees. We were interested in applying &lt;a href=&quot;https://en.wikipedia.org/wiki/Contingency_management&quot;&gt;contingency management theory&lt;/a&gt; to teenagers who are just starting to build credit. One of my teammates is a data scientist who studied psycology at the PhD level and has published several papers on the topic of contingency management for substance abuse.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Challenge the Future of Family Finances&lt;/strong&gt; was the theme for the event, so as &lt;em&gt;Team Contingency&lt;/em&gt;, we set out to create an app called &lt;em&gt;Contingency&lt;/em&gt; to help teenagers better manage their finances with techniques from contingency managment (CM). Here’s a snippet from Wikipedia on CM:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CM refers to the application of the three-term contingency (or operant conditioning), which uses stimulus control and positive reinforcement to change behavior. Patients’ behaviors are rewarded (or, less often, punished); generally, adherence to or failure to adhere to program rules and regulations or their treatment plan. CM derives from the science of applied behavior analysis (ABA), and by most evaluations, its procedures produces one of the largest effect sizes out of all mental health and educational interventions.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Our app rewards young families for making sound purchases. The app allows for primary users (parents) to rate each transaction on an authorized user’s credit card (where authorized user refers to teenagers). By consistantly making responsible purchases over a prolonged period of time, an authorized user’s credit will increase. When an authorized user makes “bad” purchases, their credit limit is significantly reduced.&lt;/p&gt;

&lt;p&gt;Here are some screen shots from the final version of our app:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/capitalone/capitalone_contingency_1.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I have limited experience with React, but my team was lucky to have two front end wizards put this interface together with React.js libraries. The charts show expenditures for multiple authorized users on an account as well as the credit limit generated by the ratings of their previous transactions.&lt;/p&gt;

&lt;p&gt;The link to the demo is &lt;a href=&quot;capitalone2017.surge.sh&quot;&gt;capitalone2017.surge.sh&lt;/a&gt;. Here is another screenshot looking at the recent transactions of one authorized user and buttons that a parent can toggle to rate transactions as “responsible” or “not responsible”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/capitalone/capitalone_contingency_2.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I worked on the backend webserver that provided data for the React.js interface. This was an awesome learning experience since I did things with Django and Python that I haven’t done before (at least not trivially), namely multithreading and working with MongoDB.&lt;/p&gt;

&lt;h2 id=&quot;multithreading&quot;&gt;Multithreading&lt;/h2&gt;

&lt;p&gt;Becuase of the way Capital One’s API was structured, we needed to make post requests to get data on a given customer. &lt;a href=&quot;https://github.com/CapitalOne-AU-Hackathon/au-hackathon-getting-started/blob/master/API_Getting_Started.md&quot;&gt;Here&lt;/a&gt; is the documentation for the API. Since we wanted to show transactions from all related users (primary and authorized accounts), this required making lots of individual requests. To speed this up, we used Python’s &lt;a href=&quot;https://docs.python.org/3/library/concurrent.futures.html&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ThreadPoolExecutor&lt;/code&gt;&lt;/a&gt; to make requests in parallel rather than looping over each authorized user and making requests one at a time. Here’s what this looks like in our code:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;concurrent.futures&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPoolExecutor&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ThreadPoolExecutor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;filled_customers&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;executor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map_to_get_customer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                                &lt;span class=&quot;n&quot;&gt;timeout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This is part of a Django endpoint in which we make external calls to Capital One’s API. &lt;a href=&quot;https://github.com/briancaffey/capital-one-backend/blob/master/api/views.py&quot;&gt;Here&lt;/a&gt; is the full file containing this view on my GitHub repo. Another teammate did a fantastic job putting together a collection of functions that would allow us to query the API data in many different ways, as well as write data to it, but our final demo only used one function. &lt;a href=&quot;https://github.com/briancaffey/capital-one-backend/blob/master/api/utils.py&quot;&gt;Here&lt;/a&gt; is the file with that collection of functions.&lt;/p&gt;

&lt;h2 id=&quot;mongodb&quot;&gt;MongoDB&lt;/h2&gt;

&lt;p&gt;We used MongoDB to cache data from the API and also add additional information to each transaction for authorized users (including the “rating” for each transaction, a boolean value for whether or not the transaction was responsible).&lt;/p&gt;

&lt;p&gt;Here’s a look at how we updated the MongoDB database. From front-end we would send a request to an endpoint that would call the following function (along with data in the body about what we are updating, such as: &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;customer_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100720000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;transaction_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100720002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;rating&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://github.com/briancaffey/capital-one-backend/blob/master/api/views.py#L56&quot;&gt;api/views.py – &lt;code class=&quot;highlighter-rouge&quot;&gt;update_transaction()&lt;/code&gt;&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;update_transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loads&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;transaction_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transaction_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;rating&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;transactions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)})[&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;transactions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;updated_transactions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transactions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transaction_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;transaction_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;updated_transactions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;**&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;rating&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rating&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;updated_transactions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;transaction&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_one&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;customer_id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;customer_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;$set&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;transactions&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;updated_transactions&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}})&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'{response.modified_count} item(s) were updated'&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;status&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;KeyError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JsonResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;error&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;failed to find record&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Overall it was a great hackathon and I was really impressed with some of the other projects. Thanks to Capital One and BeMyApp for putting the event together.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Nov 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2017/11/05/capital-one-hackathon.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/11/05/capital-one-hackathon.html</guid>
        
        
      </item>
    
      <item>
        <title>A binary clock written in bash</title>
        <description>&lt;p&gt;&lt;img src=&quot;/static/binaryclock.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Configuring the i3 window manager on my laptop has got me interested in learning more about bash scripting. As an exercise for getting more familiar with bash, I set out to write a simple &lt;a href=&quot;https://en.wikipedia.org/wiki/Binary_clock&quot;&gt;binary clock&lt;/a&gt; application that runs in the terminal.&lt;/p&gt;

&lt;p&gt;To simplifiy my clock, I decided to display Unix time as a binary number with ones and zeros represented as the unicode symbols ● and ○, respectively. &lt;a href=&quot;https://en.wikipedia.org/wiki/Unix_time&quot;&gt;Unix time&lt;/a&gt; is the number of second that have passed since January 1, 1970. Here’s what I had in mind when I started out:&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
      &lt;td&gt;●&lt;/td&gt;
      &lt;td&gt;○&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;In this representation, the lower right cell represents the one’s place, the next cell to the left represents the two’s place, the next over the four’s place, the next the eight’s, and so on.&lt;/p&gt;

&lt;p&gt;Here’s the code that I ended up using for my clock program:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/bash&lt;/span&gt;
resize -s 8 19

&lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;decToBin &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ibase=10; obase=2; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | bc; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;;

draw&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;binstring&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;decToBin &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;date &lt;span class=&quot;s1&quot;&gt;'+%s'&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;31..6..-5&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;do
      &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$binstring&lt;/span&gt; | tail -c &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; | head -c 5
      &lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\e[?25l'&lt;/span&gt;
clear 

&lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; ; &lt;span class=&quot;k&quot;&gt;do
  &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\033[;H'&lt;/span&gt; 
  &lt;span class=&quot;nv&quot;&gt;offset_v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput lines&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$offset_v&lt;/span&gt; &amp;gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;nv&quot;&gt;$offset_v&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;; 
  &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;seq 1 &lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;;
    &lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;done
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;offset_h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput cols&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$offset_h&lt;/span&gt; &amp;gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;nv&quot;&gt;$offset_h&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;; 
  &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;draw&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; | sed &lt;span class=&quot;s2&quot;&gt;&quot;s/1/ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput setaf 6&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;● /g&quot;&lt;/span&gt; | 
                 sed &lt;span class=&quot;s2&quot;&gt;&quot;s/0/ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput setaf 6&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;○ /g&quot;&lt;/span&gt; |
                 sed &lt;span class=&quot;s2&quot;&gt;&quot;s/^/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;head -c &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &amp;lt; /dev/zero | tr &lt;span class=&quot;s1&quot;&gt;'\0'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\ '&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;
  sleep 1
&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The program uses two function and one while loop to display the time.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decToBin&lt;/code&gt; is a simple helper function to convert decimal numbers to binary representations.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;draw&lt;/code&gt; structures the the string of ones and zeros into 6 rows and five columns of ones and zeros. This function uses &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt; in combination with a &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt; loop to iterate over a string. Notice the &lt;code class=&quot;highlighter-rouge&quot;&gt;-c&lt;/code&gt; flag on &lt;code class=&quot;highlighter-rouge&quot;&gt;tail&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;head&lt;/code&gt;. The following is from the &lt;code class=&quot;highlighter-rouge&quot;&gt;man head&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;       -c, --bytes&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;-]NUM
              print the first NUM bytes of each file;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This gets &lt;code class=&quot;highlighter-rouge&quot;&gt;NUM&lt;/code&gt; number of ones and zeros (each being one byte) from the string of ones and zeros that results from &lt;code class=&quot;highlighter-rouge&quot;&gt;decToBin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; loop, I measure the length and width of the terminal window to center the position of the clock in case it has been changed with the following lines of code:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
  &lt;span class=&quot;nv&quot;&gt;offset_v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput lines&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;3&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$offset_v&lt;/span&gt; &amp;gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;nv&quot;&gt;$offset_v&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;; 
  &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;seq 1 &lt;span class=&quot;nv&quot;&gt;$v&lt;/span&gt;&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;;
    &lt;span class=&quot;k&quot;&gt;do
        &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;done
  &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;offset_h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput cols&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;7&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$((&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$offset_h&lt;/span&gt; &amp;gt; &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; ? &lt;span class=&quot;nv&quot;&gt;$offset_h&lt;/span&gt; : &lt;span class=&quot;m&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;))&lt;/span&gt;; 
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally, I convert the ones and zeros to the colored unicode circles with the following lines of code:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;draw&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt; | sed &lt;span class=&quot;s2&quot;&gt;&quot;s/1/ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput setaf 6&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;● /g&quot;&lt;/span&gt; | 
                 sed &lt;span class=&quot;s2&quot;&gt;&quot;s/0/ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;tput setaf 6&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;○ /g&quot;&lt;/span&gt; |
                 sed &lt;span class=&quot;s2&quot;&gt;&quot;s/^/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;head -c &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &amp;lt; /dev/zero | tr &lt;span class=&quot;s1&quot;&gt;'\0'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\ '&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Piping the output of &lt;code class=&quot;highlighter-rouge&quot;&gt;draw&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; lets us do some simple substition using the pattern:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed &lt;span class=&quot;s2&quot;&gt;&quot;s/&amp;lt;what you want to swap out&amp;gt;/&amp;lt;what you want to swap in&amp;gt;/g&quot;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;../g&quot;&lt;/code&gt; at the end of the &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; argument specifies that we want to make the substition globally.&lt;/p&gt;

&lt;p&gt;The last &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; command inserts spaces to the right of each row for the horizontal offset (in order to center the clock on our terminal window). This uses another interesting pattern that I came across on StackOverflow:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sed &lt;span class=&quot;s2&quot;&gt;&quot;s/^/&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;head -c &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &amp;lt; /dev/zero | tr &lt;span class=&quot;s1&quot;&gt;'\0'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\ '&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;^&lt;/code&gt; is a regular expression that represents the beginning of a line. So with this &lt;code class=&quot;highlighter-rouge&quot;&gt;sed&lt;/code&gt; substitution we will be adding to the beginning of each line. What we are adding is the following:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;head -c &lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt; &amp;lt; /dev/zero | tr &lt;span class=&quot;s1&quot;&gt;'\0'&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'\ '&lt;/span&gt;;&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;/
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;This takes the number of columns that we want to shift our clock as &lt;code class=&quot;highlighter-rouge&quot;&gt;$h&lt;/code&gt; and reads the first &lt;code class=&quot;highlighter-rouge&quot;&gt;$h&lt;/code&gt; bytes from &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/zero&lt;/code&gt;. &lt;code class=&quot;highlighter-rouge&quot;&gt;/dev/zero&lt;/code&gt; produces a continuous stream of NULL (zero value) bytes, so the first &lt;code class=&quot;highlighter-rouge&quot;&gt;$h&lt;/code&gt; bytes will be something like &lt;code class=&quot;highlighter-rouge&quot;&gt;\0, \0, \0, \0, \0&lt;/code&gt;. We then pipe this output to &lt;code class=&quot;highlighter-rouge&quot;&gt;tr&lt;/code&gt; which translates the null bytes into spaces (&lt;code class=&quot;highlighter-rouge&quot;&gt;'\ '&lt;/code&gt;) which help us pad our clock.&lt;/p&gt;

&lt;p&gt;Here’s a screenshot of the clock in action:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/static/binaryclock.png&quot; alt=&quot;png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here’s the script on my github account:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/briancaffey/binaryclock/blob/master/binaryclock&quot;&gt;https://github.com/briancaffey/binaryclock/blob/master/binaryclock&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;The clock works well on &lt;code class=&quot;highlighter-rouge&quot;&gt;rxvt-unicode&lt;/code&gt;, but I need to make some small changes to make it work on other terminal emulators.&lt;/p&gt;
</description>
        <pubDate>Tue, 31 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2017/10/31/a-binary-clock-written-in-bash.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/31/a-binary-clock-written-in-bash.html</guid>
        
        
      </item>
    
      <item>
        <title>How to connect to Google Starbucks wifi using i3 and Arch Linux</title>
        <description>&lt;p&gt;If you are new to i3 and find yourself having trouble connecting to wifi networks in new places, you have come to the right article.&lt;/p&gt;

&lt;p&gt;I was recently at a Starbucks and couldn’t connect to the open &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Wifi&lt;/code&gt; network. Coming from Gnome Desktop, I have been having to learn how to do things the i3 way. Simple things like connecting to new wifi networks require new approaches.&lt;/p&gt;

&lt;p&gt;If you install the &lt;code class=&quot;highlighter-rouge&quot;&gt;dialog&lt;/code&gt; package, you can use &lt;code class=&quot;highlighter-rouge&quot;&gt;wifi-menu&lt;/code&gt; to view available networks and select which network you want to join. This didn’t work when I recently tried to join a Google Startbucks wifi network. There is a a simple CLI tool for &lt;code class=&quot;highlighter-rouge&quot;&gt;NetworkManager&lt;/code&gt; called &lt;code class=&quot;highlighter-rouge&quot;&gt;nmcli&lt;/code&gt; that you can use to join networks.&lt;/p&gt;

&lt;p&gt;Here is how to scan networks with &lt;code class=&quot;highlighter-rouge&quot;&gt;nmcli&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[brian@archthinkpad ~]$ nmcli d wifi list
*  SSID                  MODE   CHAN  RATE       SIGNAL  BARS  SECURITY    
   --                    Infra  11    54 Mbit/s  94      ▂▄▆█  WPA2 802.1X 
   Google Starbucks      Infra  11    54 Mbit/s  89      ▂▄▆█  --          
   Google Starbucks      Infra  48    54 Mbit/s  87      ▂▄▆█  --          
   --                    Infra  48    54 Mbit/s  87      ▂▄▆█  WPA2 802.1X 
   --                    Infra  1     54 Mbit/s  75      ▂▄▆_  --          
   Einstein Bros Bagels  Infra  1     54 Mbit/s  75      ▂▄▆_  --          
   --                    Infra  1     54 Mbit/s  75      ▂▄▆_  WPA1 WPA2   
   --                    Infra  1     54 Mbit/s  72      ▂▄▆_  WPA2        
   Einstein Bros Bagels  Infra  161   54 Mbit/s  60      ▂▄▆_  --          
   --                    Infra  161   54 Mbit/s  59      ▂▄▆_  WPA1 WPA2   
   xfinitywifi           Infra  153   54 Mbit/s  40      ▂▄__  --          
   XFINITY               Infra  153   54 Mbit/s  40      ▂▄__  WPA2 802.1X 
   CoxWiFi               Infra  153   54 Mbit/s  39      ▂▄__  --          
   CableWiFi             Infra  153   54 Mbit/s  39      ▂▄__  --          
   XFINITY               Infra  11    54 Mbit/s  27      ▂___  WPA2 802.1X 
   ZM7JQ                 Infra  6     54 Mbit/s  24      ▂___  WPA2      
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;And here is how to connect to the &lt;code class=&quot;highlighter-rouge&quot;&gt;Google Starbucks&lt;/code&gt; network.&lt;/p&gt;

&lt;div class=&quot;language-terminal highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[brian@archthinkpad ~]$ nmcli dev wifi connect Google\ Starbucks
Device 'wlp3s0' successfully activated with 'da3af242-4707-42f0-81c8-6f8b9dc1a0f7'.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;You can read more about &lt;code class=&quot;highlighter-rouge&quot;&gt;nmcli&lt;/code&gt; on the &lt;a href=&quot;https://wiki.archlinux.org/index.php/NetworkManager&quot;&gt;Arch Wiki Network Manager article&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Oct 2017 00:00:00 -0400</pubDate>
        <link>http://localhost:4000/2017/10/20/how-to-connect-to-starbucks-wifi-with-i3.html</link>
        <guid isPermaLink="true">http://localhost:4000/2017/10/20/how-to-connect-to-starbucks-wifi-with-i3.html</guid>
        
        
      </item>
    
  </channel>
</rss>
